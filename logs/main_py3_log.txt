 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Apparently, the arms have rewards in [0, 1] (lower = 0, amplitude = 1)
Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}}, {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}]
plots/ is already a directory here...
Number of policies in this comparaison: 7
Time horizon: 10000
Number of repetitions: 1
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82]
 - with 'arms' = [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.82
 - with 'minArm' = 0.01
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [(2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1)], 'arm_type': <class 'Arms.Exponential.Exponential'>} ...
 - with 'arm_type' = <class 'Arms.Exponential.Exponential'>
 - with 'params' = [(2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1)]
 - with 'arms' = [Exp(2, 1), Exp(3, 1), Exp(4, 1), Exp(5, 1), Exp(6, 1), Exp(7, 1), Exp(8, 1), Exp(9, 1), Exp(10, 1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.432332358382
 - with 'minArm' = 0.099995460007
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)], 'arm_type': <class 'Arms.Gaussian.Gaussian'>} ...
 - with 'arm_type' = <class 'Arms.Gaussian.Gaussian'>
 - with 'params' = [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)]
 - with 'arms' = [G(0.1, 0.05), G(0.2, 0.05), G(0.3, 0.05), G(0.4, 0.05), G(0.5, 0.05), G(0.6, 0.05), G(0.7, 0.05), G(0.8, 0.05), G(0.9, 0.05)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1
Number of environments to try: 3

Evaluating environment: <MAB{'maxArm': 0.81999999999999995, 'minArm': 0.01, 'nbArms': 9, 'arms': [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)]}>
- Adding policy #1 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #2 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #3 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #4 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #5 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #6 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #7 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...

===> Pre-computing the rewards ... Of shape (9, 1, 10000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/7: Aggr($N=5$, Exp4) ...

- Evaluating policy #2/7: Aggr($N=5$) ...

- Evaluating policy #3/7: Thompson ...

- Evaluating policy #4/7: BayesUCB ...

- Evaluating policy #5/7: KL-UCB+(Bern) ...

- Evaluating policy #6/7: KL-UCB+(Exp) ...

- Evaluating policy #7/7: KL-UCB+(Gauss) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'KL-UCB+(Gauss)'	was ranked	1 / 7 for this simulation (last regret = 3.82).
- Policy 'KL-UCB+(Bern)'	was ranked	2 / 7 for this simulation (last regret = 60.82).
- Policy 'BayesUCB'	was ranked	3 / 7 for this simulation (last regret = 63.82).
- Policy 'Thompson'	was ranked	4 / 7 for this simulation (last regret = 68.82).
- Policy 'Aggr($N=5$)'	was ranked	5 / 7 for this simulation (last regret = 73.82).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	6 / 7 for this simulation (last regret = 98.82).
- Policy 'KL-UCB+(Exp)'	was ranked	7 / 7 for this simulation (last regret = 144.82).

Evaluating environment: <MAB{'maxArm': 0.43233235838169365, 'minArm': 0.099995460007023751, 'nbArms': 9, 'arms': [Exp(2, 1), Exp(3, 1), Exp(4, 1), Exp(5, 1), Exp(6, 1), Exp(7, 1), Exp(8, 1), Exp(9, 1), Exp(10, 1)]}>
- Adding policy #1 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #2 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #3 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #4 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #5 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #6 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #7 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...

===> Pre-computing the rewards ... Of shape (9, 1, 10000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/7: Aggr($N=5$, Exp4) ...

- Evaluating policy #2/7: Aggr($N=5$) ...

- Evaluating policy #3/7: Thompson ...

- Evaluating policy #4/7: BayesUCB ...

- Evaluating policy #5/7: KL-UCB+(Bern) ...

- Evaluating policy #6/7: KL-UCB+(Exp) ...

- Evaluating policy #7/7: KL-UCB+(Gauss) ...
Giving the final ranks ...

Final ranking for this environment #1 :
- Policy 'KL-UCB+(Gauss)'	was ranked	1 / 7 for this simulation (last regret = 30.2674).
- Policy 'KL-UCB+(Exp)'	was ranked	2 / 7 for this simulation (last regret = 54.5169).
- Policy 'Thompson'	was ranked	3 / 7 for this simulation (last regret = 77.0814).
- Policy 'Aggr($N=5$)'	was ranked	4 / 7 for this simulation (last regret = 81.0959).
- Policy 'KL-UCB+(Bern)'	was ranked	5 / 7 for this simulation (last regret = 95.2796).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	6 / 7 for this simulation (last regret = 102.167).
- Policy 'BayesUCB'	was ranked	7 / 7 for this simulation (last regret = 111.041).

Evaluating environment: <MAB{'maxArm': 0.90000000000000002, 'minArm': 0.10000000000000001, 'nbArms': 9, 'arms': [G(0.1, 0.05), G(0.2, 0.05), G(0.3, 0.05), G(0.4, 0.05), G(0.5, 0.05), G(0.6, 0.05), G(0.7, 0.05), G(0.8, 0.05), G(0.9, 0.05)]}>
- Adding policy #1 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': True}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #2 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'decreaseRate': 'auto', 'unbiased': False, 'update_all_children': False, 'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}}], 'update_like_exp4': False}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #3 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #4 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'amplitude': 1, 'lower': 0}} ...
- Adding policy #5 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbBern>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #6 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbExp>, 'amplitude': 1, 'lower': 0}} ...
- Adding policy #7 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <function klucbGauss at 0x7f74e2ab7c80>, 'amplitude': 1, 'lower': 0}} ...

===> Pre-computing the rewards ... Of shape (9, 1, 10000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/7: Aggr($N=5$, Exp4) ...

- Evaluating policy #2/7: Aggr($N=5$) ...

- Evaluating policy #3/7: Thompson ...

- Evaluating policy #4/7: BayesUCB ...

- Evaluating policy #5/7: KL-UCB+(Bern) ...

- Evaluating policy #6/7: KL-UCB+(Exp) ...

- Evaluating policy #7/7: KL-UCB+(Gauss) ...
Giving the final ranks ...

Final ranking for this environment #2 :
- Policy 'KL-UCB+(Gauss)'	was ranked	1 / 7 for this simulation (last regret = 26.8434).
- Policy 'Aggr($N=5$)'	was ranked	2 / 7 for this simulation (last regret = 41.8986).
- Policy 'BayesUCB'	was ranked	3 / 7 for this simulation (last regret = 49.3295).
- Policy 'Thompson'	was ranked	4 / 7 for this simulation (last regret = 52.025).
- Policy 'KL-UCB+(Bern)'	was ranked	5 / 7 for this simulation (last regret = 55.422).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	6 / 7 for this simulation (last regret = 65.0349).
- Policy 'KL-UCB+(Exp)'	was ranked	7 / 7 for this simulation (last regret = 149.563).
Done for simulations main.py ...
