 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Apparently, the arms have rewards in [-10, 10] (lower = -10, amplitude = 20)
Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {'children': [{'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbBern>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbExp>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbGauss>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'unbiased': False, 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'children': [{'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbBern>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbExp>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbGauss>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'unbiased': False, 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbBern>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbExp>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbGauss>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 7
Time horizon: 10000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Gaussian.Gaussian'>, 'params': [(-8, 1, -10, 10), (-6, 1, -10, 10), (-4, 1, -10, 10), (-2, 1, -10, 10), (0, 1, -10, 10), (2, 1, -10, 10), (4, 1, -10, 10), (6, 1, -10, 10), (8, 1, -10, 10)]} ...
 - with 'arm_type' = <class 'Arms.Gaussian.Gaussian'>
 - with 'params' = [(-8, 1, -10, 10), (-6, 1, -10, 10), (-4, 1, -10, 10), (-2, 1, -10, 10), (0, 1, -10, 10), (2, 1, -10, 10), (4, 1, -10, 10), (6, 1, -10, 10), (8, 1, -10, 10)]
 - with 'arms' = [G(-8, 1), G(-6, 1), G(-4, 1), G(-2, 1), G(0, 1), G(2, 1), G(4, 1), G(6, 1), G(8, 1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 8
 - with 'minArm' = -8
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [G(-8, 1), G(-6, 1), G(-4, 1), G(-2, 1), G(0, 1), G(2, 1), G(4, 1), G(6, 1), G(8, 1)], 'maxArm': 8, 'nbArms': 9, 'minArm': -8}>
- Adding policy #1 = {'params': {'children': [{'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbBern>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbExp>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbGauss>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'unbiased': False, 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'children': [{'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbBern>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbExp>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'amplitude': 20, 'klucb': <built-in function klucbGauss>, 'lower': -10}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'unbiased': False, 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 20, 'lower': -10}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/home/lilian/ownCloud/cloud.openmailbox.org/Th√®se_2016-17/src/AlgoBandits.git/main.py[0m in [0;36m<module>[0;34m()[0m
[1;32m     88[0m [0;34m[0m[0m
[1;32m     89[0m         [0;31m# Evaluate just that env[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 90[0;31m         [0mevaluation[0m[0;34m.[0m[0mstartOneEnv[0m[0;34m([0m[0menvId[0m[0;34m,[0m [0menv[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     91[0m [0;34m[0m[0m
[1;32m     92[0m         [0;32mif[0m [0msaveallfigs[0m[0;34m:[0m[0;34m[0m[0m

[0;32m/home/lilian/ownCloud/cloud.openmailbox.org/Th√®se_2016-17/src/AlgoBandits.git/Environment/Evaluator.py[0m in [0;36mstartOneEnv[0;34m(self, envId, env)[0m
[1;32m    112[0m         [0mprint[0m[0;34m([0m[0;34m"\nEvaluating environment:"[0m[0;34m,[0m [0mrepr[0m[0;34m([0m[0menv[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[1;32m    113[0m         [0mself[0m[0;34m.[0m[0mpolicies[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0m
[0;32m--> 114[0;31m         [0mself[0m[0;34m.[0m[0m__initPolicies__[0m[0;34m([0m[0menv[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m    115[0m         [0;31m# Precompute rewards[0m[0;34m[0m[0;34m[0m[0m
[1;32m    116[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mcache_rewards[0m[0;34m:[0m[0;34m[0m[0m

[0;32m/home/lilian/ownCloud/cloud.openmailbox.org/Th√®se_2016-17/src/AlgoBandits.git/Environment/Evaluator.py[0m in [0;36m__initPolicies__[0;34m(self, env)[0m
[1;32m     85[0m             [0;32mif[0m [0misinstance[0m[0;34m([0m[0mpolicy[0m[0;34m,[0m [0mdict[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     86[0m                 [0mprint[0m[0;34m([0m[0;34m"  Creating this policy from a dictionnary 'self.cfg['policies'][{}]' = {} ..."[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mpolicyId[0m[0;34m,[0m [0mpolicy[0m[0;34m)[0m[0;34m)[0m  [0;31m# DEBUG[0m[0;34m[0m[0m
[0;32m---> 87[0;31m                 [0mself[0m[0;34m.[0m[0mpolicies[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mpolicy[0m[0;34m[[0m[0;34m'archtype'[0m[0;34m][0m[0;34m([0m[0menv[0m[0;34m.[0m[0mnbArms[0m[0;34m,[0m [0;34m**[0m[0mpolicy[0m[0;34m[[0m[0;34m'params'[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     88[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     89[0m                 [0mprint[0m[0;34m([0m[0;34m"  Using this already created policy 'self.cfg['policies'][{}]' = {} ..."[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mpolicyId[0m[0;34m,[0m [0mpolicy[0m[0;34m)[0m[0;34m)[0m  [0;31m# DEBUG[0m[0;34m[0m[0m

[0;32m/home/lilian/ownCloud/cloud.openmailbox.org/Th√®se_2016-17/src/AlgoBandits.git/Policies/Aggr.py[0m in [0;36m__init__[0;34m(self, nbArms, children, learningRate, decreaseRate, horizon, update_all_children, update_like_exp4, unbiased, prior, lower, amplitude)[0m
[1;32m     66[0m             [0;32mif[0m [0misinstance[0m[0;34m([0m[0mchild[0m[0;34m,[0m [0mdict[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     67[0m                 [0mprint[0m[0;34m([0m[0;34m"  Creating this child player from a dictionnary 'children[{}]' = {} ..."[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mi[0m[0;34m,[0m [0mchild[0m[0;34m)[0m[0;34m)[0m  [0;31m# DEBUG[0m[0;34m[0m[0m
[0;32m---> 68[0;31m                 [0mself[0m[0;34m.[0m[0mchildren[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mchild[0m[0;34m[[0m[0;34m'archtype'[0m[0;34m][0m[0;34m([0m[0mnbArms[0m[0;34m,[0m [0mlower[0m[0;34m=[0m[0mlower[0m[0;34m,[0m [0mamplitude[0m[0;34m=[0m[0mamplitude[0m[0;34m,[0m [0;34m**[0m[0mchild[0m[0;34m[[0m[0;34m'params'[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     69[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     70[0m                 [0mprint[0m[0;34m([0m[0;34m"  Using this already created player 'children[{}]' = {} ..."[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mi[0m[0;34m,[0m [0mchild[0m[0;34m)[0m[0;34m)[0m  [0;31m# DEBUG[0m[0;34m[0m[0m

[0;31mTypeError[0m: type object got multiple values for keyword argument 'amplitude'
