Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}}, {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}}, {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}}, {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}}, {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'learningRate': 0.01, 'update_all_children': False, 'decreaseRate': 1500.0, 'children': [{'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}}, {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}}, {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}}, {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}}]}}]
plots/ is already a directory here...
Number of policies in this comparaison: 10
Time horizon: 3000
Number of repetitions: 20
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.5, 0.9]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.5, 0.9]
 - with 'arms' = [B(0.1), B(0.5), B(0.9)]
 - with 'nbArms' = 3
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.1), B(0.5), B(0.9)], 'nbArms': 3, 'maxArm': 0.90000000000000002}>
- Adding policy #1 = {'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}} ...
- Adding policy #2 = {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}} ...
- Adding policy #3 = {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}} ...
- Adding policy #4 = {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}} ...
- Adding policy #5 = {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}} ...
- Adding policy #6 = {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}} ...
- Adding policy #7 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}} ...
- Adding policy #8 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}} ...
- Adding policy #9 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}} ...
- Adding policy #10 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'learningRate': 0.01, 'update_all_children': False, 'decreaseRate': 1500.0, 'children': [{'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}}, {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}}, {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}}, {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}}]}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'learningRate': 0.01, 'update_all_children': False, 'decreaseRate': 1500.0, 'children': [{'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}}, {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}}, {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}}, {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}}, {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}}]}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>, 'params': {'epsilon': 0.1}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>, 'params': {'decreasingRate': 0.005, 'epsilon': 0.1}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>, 'params': {'horizon': 3000, 'epsilon': 0.1}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[5]' = {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[6]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[7]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[8]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}} ...

- Evaluating policy #1/10: EpsilonGreedy(0.1) ...

- Evaluating policy #2/10: EpsilonDecreasing(e:0.1, r:0.005) ...

- Evaluating policy #3/10: EpsilonFirst(e:0.1, h:3000) ...

- Evaluating policy #4/10: UCBopt ...

- Evaluating policy #5/10: Softmax(decreasing) ...

- Evaluating policy #6/10: MOSS ...

- Evaluating policy #7/10: Thompson ...

- Evaluating policy #8/10: klUCBPlus ...

- Evaluating policy #9/10: BayesUCB ...

- Evaluating policy #10/10: Aggr(nb: 9, rate: 0.01) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'klUCBPlus'	was ranked	1 / 10 for this simulation (last regret = 6.35).
- Policy 'Thompson'	was ranked	2 / 10 for this simulation (last regret = 8.35).
- Policy 'Softmax(decreasing)'	was ranked	3 / 10 for this simulation (last regret = 9.35).
- Policy 'UCBopt'	was ranked	4 / 10 for this simulation (last regret = 10.25).
- Policy 'BayesUCB'	was ranked	5 / 10 for this simulation (last regret = 11.6).
- Policy 'MOSS'	was ranked	6 / 10 for this simulation (last regret = 17.85).
- Policy 'Aggr(nb: 9, rate: 0.01)'	was ranked	7 / 10 for this simulation (last regret = 24.3).
- Policy 'EpsilonDecreasing(e:0.1, r:0.005)'	was ranked	8 / 10 for this simulation (last regret = 730.05).
- Policy 'EpsilonGreedy(0.1)'	was ranked	9 / 10 for this simulation (last regret = 872.45).
- Policy 'EpsilonFirst(e:0.1, h:3000)'	was ranked	10 / 10 for this simulation (last regret = 1250.75).
plots/T3000_N20__10_algos is already a directory here...
