Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae28c2bac8>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae3d14cd68>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae16253da0>, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}}, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}}, {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'update_all_children': True, 'children': [{'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae28c2bac8>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae3d14cd68>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae16253da0>, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}}, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}}], 'learningRate': 0.01, 'decreaseRate': 15000.0}}]
plots is already a directory here...
Number of policies in this comparaison: 8
Time horizon: 30000
Number of repetitions: 4
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]
 - with 'arms' = [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)]
 - with 'nbArms' = 17
 - with 'maxArm' = 0.85
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 17, 'arms': [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)], 'maxArm': 0.85}>
- Adding policy #1 = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
- Adding policy #2 = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
- Adding policy #3 = TakeFixedArm(16) ...
  Using this already created policy 'self.cfg['policies'][2]' = TakeFixedArm(16) ...
- Adding policy #4 = TakeFixedArm(15) ...
  Using this already created policy 'self.cfg['policies'][3]' = TakeFixedArm(15) ...
- Adding policy #5 = TakeFixedArm(0) ...
  Using this already created policy 'self.cfg['policies'][4]' = TakeFixedArm(0) ...
- Adding policy #6 = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}} ...
- Adding policy #7 = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}} ...
- Adding policy #8 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'update_all_children': True, 'children': [{'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae28c2bac8>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae3d14cd68>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae16253da0>, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}}, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}}], 'learningRate': 0.01, 'decreaseRate': 15000.0}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'update_all_children': True, 'children': [{'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae28c2bac8>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae3d14cd68>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fae16253da0>, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}}, {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}}], 'learningRate': 0.01, 'decreaseRate': 15000.0}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>, 'params': {}} ...
  Using this already created player 'children[2]' = TakeFixedArm(16) ...
  Using this already created player 'children[3]' = TakeFixedArm(15) ...
  Using this already created player 'children[4]' = TakeFixedArm(0) ...
  Creating this child player from a dictionnary 'children[5]' = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.5}} ...
  Creating this child player from a dictionnary 'children[6]' = {'archtype': <class 'Policies.UCBalpha.UCBalpha'>, 'params': {'alpha': 0.1}} ...

- Evaluating policy #1/8: TakeRandomFixedArm([9, 4, 1, 7, 8, 0, 6]) ...

- Evaluating policy #2/8: TakeRandomFixedArm([13, 9, 7, 6, 5, 12, 16]) ...

- Evaluating policy #3/8: TakeFixedArm(16) ...

- Evaluating policy #4/8: TakeFixedArm(15) ...

- Evaluating policy #5/8: TakeFixedArm(0) ...

- Evaluating policy #6/8: UCB1 (alpha: 0.5) ...

- Evaluating policy #7/8: UCB1 (alpha: 0.1) ...

- Evaluating policy #8/8: Aggr (nb:7, rate:0.01) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'TakeFixedArm(16)'	was ranked	1 / 8 for this simulation (last regret = -117.65).
- Policy 'UCB1 (alpha: 0.1)'	was ranked	2 / 8 for this simulation (last regret = 190.6).
- Policy 'Aggr (nb:7, rate:0.01)'	was ranked	3 / 8 for this simulation (last regret = 221.85).
- Policy 'UCB1 (alpha: 0.5)'	was ranked	4 / 8 for this simulation (last regret = 277.1).
- Policy 'TakeFixedArm(15)'	was ranked	5 / 8 for this simulation (last regret = 354.85).
- Policy 'TakeRandomFixedArm([13, 9, 7, 6, 5, 12, 16])'	was ranked	6 / 8 for this simulation (last regret = 7353.35).
- Policy 'TakeRandomFixedArm([9, 4, 1, 7, 8, 0, 6])'	was ranked	7 / 8 for this simulation (last regret = 15935.9).
- Policy 'TakeFixedArm(0)'	was ranked	8 / 8 for this simulation (last regret = 25222.3).
