 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Apparently, the arms have rewards in [-10, 10] (lower = -10, amplitude = 20)
Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'unbiased': False, 'update_all_children': False}}, {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'unbiased': False, 'update_all_children': False}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}]
plots/ is already a directory here...
Number of policies in this comparaison: 7
Time horizon: 10000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Gaussian.Gaussian'>, 'params': [(-8, 1, -10, 10), (-6, 1, -10, 10), (-4, 1, -10, 10), (-2, 1, -10, 10), (0, 1, -10, 10), (2, 1, -10, 10), (4, 1, -10, 10), (6, 1, -10, 10), (8, 1, -10, 10)]} ...
 - with 'arm_type' = <class 'Arms.Gaussian.Gaussian'>
 - with 'params' = [(-8, 1, -10, 10), (-6, 1, -10, 10), (-4, 1, -10, 10), (-2, 1, -10, 10), (0, 1, -10, 10), (2, 1, -10, 10), (4, 1, -10, 10), (6, 1, -10, 10), (8, 1, -10, 10)]
 - with 'arms' = [G(-8, 1), G(-6, 1), G(-4, 1), G(-2, 1), G(0, 1), G(2, 1), G(4, 1), G(6, 1), G(8, 1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 8
 - with 'minArm' = -8
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [G(-8, 1), G(-6, 1), G(-4, 1), G(-2, 1), G(0, 1), G(2, 1), G(4, 1), G(6, 1), G(8, 1)], 'minArm': -8, 'maxArm': 8, 'nbArms': 9}>
- Adding policy #1 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'unbiased': False, 'update_all_children': False}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'unbiased': False, 'update_all_children': False}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}} ...
- Adding policy #2 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'unbiased': False, 'update_all_children': False}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'children': [{'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'unbiased': False, 'update_all_children': False}} ...
  Creating this child player from a dictionnary 'children[0]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[1]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[2]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[3]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}} ...
  Creating this child player from a dictionnary 'children[4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}} ...
- Adding policy #3 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {'lower': -10, 'amplitude': 20}} ...
- Adding policy #4 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {'lower': -10, 'amplitude': 20}} ...
- Adding policy #5 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbBern>, 'amplitude': 20}} ...
- Adding policy #6 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbExp>, 'amplitude': 20}} ...
- Adding policy #7 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'lower': -10, 'klucb': <built-in function klucbGauss>, 'amplitude': 20}} ...

===> Pre-computing the rewards ... Of shape (9, 10000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/7: Aggr($N=5$, Exp4) ...

- Evaluating policy #2/7: Aggr($N=5$) ...

- Evaluating policy #3/7: Thompson ...

- Evaluating policy #4/7: BayesUCB ...

- Evaluating policy #5/7: KL-UCB+(Bern) ...

- Evaluating policy #6/7: KL-UCB+(Exp) ...

- Evaluating policy #7/7: KL-UCB+(Gauss) ...
plots/T10000_N20__7_algos is already a directory here...
Saving the 'evaluation' objet to <_io.BufferedWriter name='plots/T10000_N20__7_algos/main____env1-1_1249474535740765751.pickle'> ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'KL-UCB+(Gauss)'	was ranked	1 / 7 for this simulation (last regret = 230.564).
- Policy 'Aggr($N=5$)'	was ranked	2 / 7 for this simulation (last regret = 776.332).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	3 / 7 for this simulation (last regret = 783.044).
- Policy 'Thompson'	was ranked	4 / 7 for this simulation (last regret = 920.638).
- Policy 'BayesUCB'	was ranked	5 / 7 for this simulation (last regret = 959.385).
- Policy 'KL-UCB+(Bern)'	was ranked	6 / 7 for this simulation (last regret = 1015.69).
- Policy 'KL-UCB+(Exp)'	was ranked	7 / 7 for this simulation (last regret = 2927.68).
 - Plotting the cumulative rewards, and saving the plot to plots/T10000_N20__7_algos/main____env1-1_1249474535740765751.png ...
Saving to plots/T10000_N20__7_algos/main____env1-1_1249474535740765751.png ...
