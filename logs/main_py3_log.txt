Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}}, {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}}, {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}}, {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}}, {'archtype': <class 'Policies.klUCB.klUCB'>, 'params': {'klucb': <built-in function klucbGauss>}}, {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbGauss>}}, {'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>, 'params': {'horizon': 10000, 'klucb': <built-in function klucbGauss>}}, {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}}]
plots/ is already a directory here...
Number of policies in this comparaison: 8
Time horizon: 10000
Number of repetitions: 20
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Gaussian.Gaussian'>, 'params': [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)]} ...
 - with 'arm_type' = <class 'Arms.Gaussian.Gaussian'>
 - with 'params' = [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)]
 - with 'arms' = [G(0.1, 0.05), G(0.2, 0.05), G(0.3, 0.05), G(0.4, 0.05), G(0.5, 0.05), G(0.6, 0.05), G(0.7, 0.05), G(0.8, 0.05), G(0.9, 0.05)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 9, 'maxArm': 0.90000000000000002, 'arms': [G(0.1, 0.05), G(0.2, 0.05), G(0.3, 0.05), G(0.4, 0.05), G(0.5, 0.05), G(0.6, 0.05), G(0.7, 0.05), G(0.8, 0.05), G(0.9, 0.05)]}>
- Adding policy #1 = {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>, 'params': {}} ...
- Adding policy #2 = {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'archtype': <class 'Policies.UCBopt.UCBopt'>, 'params': {}} ...
- Adding policy #3 = {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'archtype': <class 'Policies.MOSS.MOSS'>, 'params': {}} ...
- Adding policy #4 = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'archtype': <class 'Policies.Thompson.Thompson'>, 'params': {}} ...
- Adding policy #5 = {'archtype': <class 'Policies.klUCB.klUCB'>, 'params': {'klucb': <built-in function klucbGauss>}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'archtype': <class 'Policies.klUCB.klUCB'>, 'params': {'klucb': <built-in function klucbGauss>}} ...
- Adding policy #6 = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbGauss>}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>, 'params': {'klucb': <built-in function klucbGauss>}} ...
- Adding policy #7 = {'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>, 'params': {'horizon': 10000, 'klucb': <built-in function klucbGauss>}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>, 'params': {'horizon': 10000, 'klucb': <built-in function klucbGauss>}} ...
- Adding policy #8 = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'archtype': <class 'Policies.BayesUCB.BayesUCB'>, 'params': {}} ...

- Evaluating policy #1/8: Softmax(decreasing) ...

- Evaluating policy #2/8: UCBopt ...

- Evaluating policy #3/8: MOSS ...

- Evaluating policy #4/8: Thompson ...

- Evaluating policy #5/8: klUCB ...

- Evaluating policy #6/8: klUCBPlus ...

- Evaluating policy #7/8: klUCBHPlus ...

- Evaluating policy #8/8: BayesUCB ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'klUCBHPlus'	was ranked	1 / 8 for this simulation (last regret = 9.32708).
- Policy 'klUCB'	was ranked	2 / 8 for this simulation (last regret = 9.7501).
- Policy 'klUCBPlus'	was ranked	3 / 8 for this simulation (last regret = 11.566).
- Policy 'Softmax(decreasing)'	was ranked	4 / 8 for this simulation (last regret = 19.0264).
- Policy 'Thompson'	was ranked	5 / 8 for this simulation (last regret = 45.9204).
- Policy 'BayesUCB'	was ranked	6 / 8 for this simulation (last regret = 46.7738).
- Policy 'MOSS'	was ranked	7 / 8 for this simulation (last regret = 86.7935).
- Policy 'UCBopt'	was ranked	8 / 8 for this simulation (last regret = 107.208).
