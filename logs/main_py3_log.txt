Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': True, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 17
Time horizon: 3000
Number of repetitions: 1
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.001, 0.001, 0.005, 0.005, 0.01, 0.01, 0.02, 0.02, 0.02, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.3], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.001, 0.001, 0.005, 0.005, 0.01, 0.01, 0.02, 0.02, 0.02, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.3]
 - with 'arms' = [B(0.001), B(0.001), B(0.005), B(0.005), B(0.01), B(0.01), B(0.02), B(0.02), B(0.02), B(0.05), B(0.05), B(0.05), B(0.05), B(0.05), B(0.05), B(0.3)]
 - with 'nbArms' = 16
 - with 'maxArm' = 0.3
 - with 'minArm' = 0.001
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 16, 'minArm': 0.001, 'arms': [B(0.001), B(0.001), B(0.005), B(0.005), B(0.01), B(0.01), B(0.02), B(0.02), B(0.02), B(0.05), B(0.05), B(0.05), B(0.05), B(0.05), B(0.05), B(0.3)], 'maxArm': 0.29999999999999999}>
- Adding policy #1 = {'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': True, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': True, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[5]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[13]' = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[14]' = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #2 = {'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {'unbiased': False, 'update_all_children': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_like_exp4': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[5]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[13]' = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[14]' = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #3 = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
- Adding policy #4 = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #5 = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #6 = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #7 = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #8 = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #9 = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
- Adding policy #10 = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #11 = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][10]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
- Adding policy #12 = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][11]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #13 = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][12]' = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
- Adding policy #14 = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][13]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #15 = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][14]' = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #16 = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][15]' = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #17 = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][16]' = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...

===> Pre-computing the rewards ... Of shape (16, 3000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/17: Aggr($N=15$, Exp4) ...

- Evaluating policy #2/17: Aggr($N=15$) ...

- Evaluating policy #3/17: Softmax(decreasing) ...

- Evaluating policy #4/17: UCB($\alpha: 1$) ...

- Evaluating policy #5/17: UCB($\alpha: 0.5$) ...

- Evaluating policy #6/17: UCB($\alpha: 0.25$) ...

- Evaluating policy #7/17: UCB($\alpha: 0.1$) ...

- Evaluating policy #8/17: UCB($\alpha: 0.05$) ...

- Evaluating policy #9/17: MOSS ...

- Evaluating policy #10/17: Thompson ...

- Evaluating policy #11/17: klUCB ...

- Evaluating policy #12/17: klUCBPlus ...

- Evaluating policy #13/17: klUCBHPlus ...

- Evaluating policy #14/17: BayesUCB ...

- Evaluating policy #15/17: AdBandits($\alpha=0.5$, $T=3000$) ...

- Evaluating policy #16/17: AdBandits($\alpha=0.125$, $T=3000$) ...

- Evaluating policy #17/17: AdBandits($\alpha=0.01$, $T=3000$) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'Softmax(decreasing)'	was ranked	1 / 17 for this simulation (last regret = -10.7).
- Policy 'UCB($\alpha: 0.1$)'	was ranked	2 / 17 for this simulation (last regret = 30.3).
- Policy 'UCB($\alpha: 0.05$)'	was ranked	3 / 17 for this simulation (last regret = 34.3).
- Policy 'AdBandits($\alpha=0.125$, $T=3000$)'	was ranked	4 / 17 for this simulation (last regret = 44.3).
- Policy 'Aggr($N=15$, Exp4)'	was ranked	5 / 17 for this simulation (last regret = 45.3).
- Policy 'Aggr($N=15$)'	was ranked	6 / 17 for this simulation (last regret = 55.3).
- Policy 'UCB($\alpha: 0.5$)'	was ranked	7 / 17 for this simulation (last regret = 61.3).
- Policy 'AdBandits($\alpha=0.01$, $T=3000$)'	was ranked	8 / 17 for this simulation (last regret = 66.3).
- Policy 'AdBandits($\alpha=0.5$, $T=3000$)'	was ranked	9 / 17 for this simulation (last regret = 68.3).
- Policy 'UCB($\alpha: 0.25$)'	was ranked	10 / 17 for this simulation (last regret = 68.3).
- Policy 'klUCBPlus'	was ranked	11 / 17 for this simulation (last regret = 80.3).
- Policy 'BayesUCB'	was ranked	12 / 17 for this simulation (last regret = 98.3).
- Policy 'klUCBHPlus'	was ranked	13 / 17 for this simulation (last regret = 100.3).
- Policy 'klUCB'	was ranked	14 / 17 for this simulation (last regret = 111.3).
- Policy 'Thompson'	was ranked	15 / 17 for this simulation (last regret = 111.3).
- Policy 'MOSS'	was ranked	16 / 17 for this simulation (last regret = 117.3).
- Policy 'UCB($\alpha: 1$)'	was ranked	17 / 17 for this simulation (last regret = 133.3).
