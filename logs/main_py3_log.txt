Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': True, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 15
Time horizon: 30000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82]
 - with 'arms' = [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.82
Number of environments to try: 1

Evaluating environment: <MAB{'maxArm': 0.81999999999999995, 'arms': [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)], 'nbArms': 9}>
- Adding policy #1 = {'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': True, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': True, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[5]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #2 = {'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {'learningRate': 0.01, 'unbiased': False, 'update_like_exp4': False, 'children': [{'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'decreaseRate': 'auto', 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[5]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #3 = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
- Adding policy #4 = {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {'alpha': 4}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #5 = {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {'alpha': 3}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #6 = {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {'alpha': 2}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #7 = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #8 = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #9 = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'alpha': 0.25}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #10 = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #11 = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][10]' = {'params': {'alpha': 0.05}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #12 = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][11]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #13 = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][12]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
- Adding policy #14 = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][13]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #15 = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][14]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...

===> Pre-computing the rewards ... Of shape (9, 30000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/15: Aggr($N=13$, Exp4) ...

- Evaluating policy #2/15: Aggr($N=13$) ...
