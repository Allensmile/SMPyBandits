Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f1714e0dda0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b0710>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b09e8>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'decreaseRate': 1500.0, 'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f1714e0dda0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b0710>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b09e8>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 29
Time horizon: 3000
Number of repetitions: 4
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.5, 0.9]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.5, 0.9]
 - with 'arms' = [B(0.1), B(0.5), B(0.9)]
 - with 'nbArms' = 3
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 3, 'maxArm': 0.9, 'arms': [B(0.1), B(0.5), B(0.9)]}>
- Adding policy #1 = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
- Adding policy #2 = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
- Adding policy #3 = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
- Adding policy #4 = TakeFixedArm(2) ...
  Using this already created policy 'self.cfg['policies'][3]' = TakeFixedArm(2) ...
- Adding policy #5 = TakeFixedArm(1) ...
  Using this already created policy 'self.cfg['policies'][4]' = TakeFixedArm(1) ...
- Adding policy #6 = TakeFixedArm(0) ...
  Using this already created policy 'self.cfg['policies'][5]' = TakeFixedArm(0) ...
- Adding policy #7 = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
- Adding policy #8 = {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
- Adding policy #9 = {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
- Adding policy #10 = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
- Adding policy #11 = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][10]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
- Adding policy #12 = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][11]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
- Adding policy #13 = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][12]' = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
- Adding policy #14 = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][13]' = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
- Adding policy #15 = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][14]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
- Adding policy #16 = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][15]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #17 = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][16]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #18 = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][17]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #19 = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][18]' = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
- Adding policy #20 = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][19]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
- Adding policy #21 = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][20]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #22 = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][21]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
- Adding policy #23 = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][22]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #24 = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][23]' = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
- Adding policy #25 = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][24]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #26 = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][25]' = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #27 = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][26]' = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #28 = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][27]' = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #29 = {'params': {'decreaseRate': 1500.0, 'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f1714e0dda0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b0710>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b09e8>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][28]' = {'params': {'decreaseRate': 1500.0, 'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f1714e0dda0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b0710>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7f16f13b09e8>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'learningRate': 0.01, 'update_all_children': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Using this already created player 'children[3]' = TakeFixedArm(2) ...
  Using this already created player 'children[4]' = TakeFixedArm(1) ...
  Using this already created player 'children[5]' = TakeFixedArm(0) ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {'epsilon': 0.1, 'decreasingRate': 0.005}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {'horizon': 3000, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
  Creating this child player from a dictionnary 'children[13]' = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
  Creating this child player from a dictionnary 'children[14]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this child player from a dictionnary 'children[15]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[16]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[17]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[18]' = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
  Creating this child player from a dictionnary 'children[19]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this child player from a dictionnary 'children[20]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[21]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[22]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[23]' = {'params': {'horizon': 3000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this child player from a dictionnary 'children[24]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[25]' = {'params': {'horizon': 3000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[26]' = {'params': {'horizon': 3000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[27]' = {'params': {'horizon': 3000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...

- Evaluating policy #1/29: Uniform ...

- Evaluating policy #2/29: TakeRandomFixedArm([0]) ...

- Evaluating policy #3/29: TakeRandomFixedArm([2]) ...

- Evaluating policy #4/29: TakeFixedArm(2) ...

- Evaluating policy #5/29: TakeFixedArm(1) ...

- Evaluating policy #6/29: TakeFixedArm(0) ...

- Evaluating policy #7/29: EpsilonGreedy(0.1) ...

- Evaluating policy #8/29: EpsilonDecreasing(0.005) ...

- Evaluating policy #9/29: EpsilonFirst(0.1) ...

- Evaluating policy #10/29: UCB ...

- Evaluating policy #11/29: UCBplus ...

- Evaluating policy #12/29: UCBopt ...

- Evaluating policy #13/29: UCBrandomInit ...

- Evaluating policy #14/29: UCBV ...

- Evaluating policy #15/29: UCBtuned ...

- Evaluating policy #16/29: UCB(alpha: 1) ...

- Evaluating policy #17/29: UCB(alpha: 0.5) ...

- Evaluating policy #18/29: UCB(alpha: 0.1) ...

- Evaluating policy #19/29: Softmax(temp: 0.05) ...

- Evaluating policy #20/29: MOSS ...

- Evaluating policy #21/29: Thompson ...

- Evaluating policy #22/29: klUCB ...

- Evaluating policy #23/29: klUCBPlus ...

- Evaluating policy #24/29: klUCBHPlus ...

- Evaluating policy #25/29: BayesUCB ...

- Evaluating policy #26/29: AdBandits(alpha: 0.5) ...

- Evaluating policy #27/29: AdBandits(alpha: 0.125) ...

- Evaluating policy #28/29: AdBandits(alpha: 0.01) ...

- Evaluating policy #29/29: Aggr(nb: 28, rate: 0.01) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'TakeFixedArm(2)'	was ranked	1 / 29 for this simulation (last regret = -4.1).
- Policy 'TakeRandomFixedArm([2])'	was ranked	2 / 29 for this simulation (last regret = -3.1).
- Policy 'AdBandits(alpha: 0.01)'	was ranked	3 / 29 for this simulation (last regret = 0.15).
- Policy 'Thompson'	was ranked	4 / 29 for this simulation (last regret = 0.15).
- Policy 'BayesUCB'	was ranked	5 / 29 for this simulation (last regret = 4.65).
- Policy 'UCB(alpha: 0.5)'	was ranked	6 / 29 for this simulation (last regret = 5.9).
- Policy 'UCB(alpha: 0.1)'	was ranked	7 / 29 for this simulation (last regret = 5.9).
- Policy 'AdBandits(alpha: 0.5)'	was ranked	8 / 29 for this simulation (last regret = 10.15).
- Policy 'klUCBHPlus'	was ranked	9 / 29 for this simulation (last regret = 10.15).
- Policy 'UCBopt'	was ranked	10 / 29 for this simulation (last regret = 10.65).
- Policy 'UCB(alpha: 1)'	was ranked	11 / 29 for this simulation (last regret = 11.4).
- Policy 'AdBandits(alpha: 0.125)'	was ranked	12 / 29 for this simulation (last regret = 11.65).
- Policy 'klUCB'	was ranked	13 / 29 for this simulation (last regret = 12.15).
- Policy 'Softmax(temp: 0.05)'	was ranked	14 / 29 for this simulation (last regret = 19.65).
- Policy 'MOSS'	was ranked	15 / 29 for this simulation (last regret = 21.4).
- Policy 'klUCBPlus'	was ranked	16 / 29 for this simulation (last regret = 22.65).
- Policy 'UCBtuned'	was ranked	17 / 29 for this simulation (last regret = 26.15).
- Policy 'UCBplus'	was ranked	18 / 29 for this simulation (last regret = 32.15).
- Policy 'UCBrandomInit'	was ranked	19 / 29 for this simulation (last regret = 47.9).
- Policy 'UCB'	was ranked	20 / 29 for this simulation (last regret = 50.9).
- Policy 'Aggr(nb: 28, rate: 0.01)'	was ranked	21 / 29 for this simulation (last regret = 64.9).
- Policy 'UCBV'	was ranked	22 / 29 for this simulation (last regret = 65.15).
- Policy 'EpsilonFirst(0.1)'	was ranked	23 / 29 for this simulation (last regret = 132.15).
- Policy 'EpsilonGreedy(0.1)'	was ranked	24 / 29 for this simulation (last regret = 392.4).
- Policy 'TakeFixedArm(1)'	was ranked	25 / 29 for this simulation (last regret = 1184.15).
- Policy 'Uniform'	was ranked	26 / 29 for this simulation (last regret = 1218.65).
- Policy 'EpsilonDecreasing(0.005)'	was ranked	27 / 29 for this simulation (last regret = 2087.65).
- Policy 'TakeRandomFixedArm([0])'	was ranked	28 / 29 for this simulation (last regret = 2390.65).
- Policy 'TakeFixedArm(0)'	was ranked	29 / 29 for this simulation (last regret = 2391.4).
