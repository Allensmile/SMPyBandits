Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'learningRate': 0.01, 'children': [{'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'update_all_children': False, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 20
Time horizon: 10000
Number of repetitions: 20
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.5, 0.9]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.5, 0.9]
 - with 'arms' = [B(0.1), B(0.5), B(0.9)]
 - with 'nbArms' = 3
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 3, 'maxArm': 0.9, 'arms': [B(0.1), B(0.5), B(0.9)]}>
- Adding policy #1 = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
- Adding policy #2 = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
- Adding policy #3 = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
- Adding policy #4 = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
- Adding policy #5 = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
- Adding policy #6 = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
- Adding policy #7 = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #8 = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #9 = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
- Adding policy #10 = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
- Adding policy #11 = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][10]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
- Adding policy #12 = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][11]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #13 = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][12]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
- Adding policy #14 = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][13]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #15 = {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][14]' = {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
- Adding policy #16 = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][15]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #17 = {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][16]' = {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #18 = {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][17]' = {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #19 = {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][18]' = {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
- Adding policy #20 = {'params': {'learningRate': 0.01, 'children': [{'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'update_all_children': False, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][19]' = {'params': {'learningRate': 0.01, 'children': [{'params': {}, 'archtype': <class 'Policies.UCB.UCB'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>}, {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>}, {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}, {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>}], 'update_all_children': False, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.UCB.UCB'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {}, 'archtype': <class 'Policies.UCBrandomInit.UCBrandomInit'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {}, 'archtype': <class 'Policies.UCBV.UCBV'>} ...
  Creating this child player from a dictionnary 'children[5]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {'alpha': 1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {'alpha': 0.5}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {'alpha': 0.1}, 'archtype': <class 'Policies.UCBalpha.UCBalpha'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {'temperature': 0.05}, 'archtype': <class 'Policies.Softmax.Softmax'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[13]' = {'params': {}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[14]' = {'params': {'horizon': 10000}, 'archtype': <class 'Policies.klUCBHPlus.klUCBHPlus'>} ...
  Creating this child player from a dictionnary 'children[15]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[16]' = {'params': {'horizon': 10000, 'alpha': 0.5}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[17]' = {'params': {'horizon': 10000, 'alpha': 0.125}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...
  Creating this child player from a dictionnary 'children[18]' = {'params': {'horizon': 10000, 'alpha': 0.01}, 'archtype': <class 'Policies.AdBandits.AdBandits'>} ...

- Evaluating policy #1/20: UCB ...

- Evaluating policy #2/20: UCBplus ...

- Evaluating policy #3/20: UCBopt ...

- Evaluating policy #4/20: UCBrandomInit ...

- Evaluating policy #5/20: UCBV ...

- Evaluating policy #6/20: UCBtuned ...

- Evaluating policy #7/20: UCB(alpha: 1) ...

- Evaluating policy #8/20: UCB(alpha: 0.5) ...

- Evaluating policy #9/20: UCB(alpha: 0.1) ...

- Evaluating policy #10/20: Softmax(temp: 0.05) ...

- Evaluating policy #11/20: MOSS ...

- Evaluating policy #12/20: Thompson ...

- Evaluating policy #13/20: klUCB ...

- Evaluating policy #14/20: klUCBPlus ...

- Evaluating policy #15/20: klUCBHPlus ...

- Evaluating policy #16/20: BayesUCB ...

- Evaluating policy #17/20: AdBandits(alpha: 0.5) ...

- Evaluating policy #18/20: AdBandits(alpha: 0.125) ...

- Evaluating policy #19/20: AdBandits(alpha: 0.01) ...

- Evaluating policy #20/20: Aggr(nb: 19, rate: 0.01) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'UCB(alpha: 0.1)'	was ranked	1 / 20 for this simulation (last regret = -2.5).
- Policy 'Thompson'	was ranked	2 / 20 for this simulation (last regret = 0.15).
- Policy 'AdBandits(alpha: 0.125)'	was ranked	3 / 20 for this simulation (last regret = 0.25).
- Policy 'klUCB'	was ranked	4 / 20 for this simulation (last regret = 4.75).
- Policy 'UCBplus'	was ranked	5 / 20 for this simulation (last regret = 6.05).
- Policy 'klUCBHPlus'	was ranked	6 / 20 for this simulation (last regret = 9.45).
- Policy 'BayesUCB'	was ranked	7 / 20 for this simulation (last regret = 10.4).
- Policy 'UCBopt'	was ranked	8 / 20 for this simulation (last regret = 12.25).
- Policy 'AdBandits(alpha: 0.5)'	was ranked	9 / 20 for this simulation (last regret = 13.55).
- Policy 'UCB(alpha: 0.5)'	was ranked	10 / 20 for this simulation (last regret = 14).
- Policy 'AdBandits(alpha: 0.01)'	was ranked	11 / 20 for this simulation (last regret = 14.6).
- Policy 'klUCBPlus'	was ranked	12 / 20 for this simulation (last regret = 15.05).
- Policy 'UCB(alpha: 1)'	was ranked	13 / 20 for this simulation (last regret = 15.8).
- Policy 'MOSS'	was ranked	14 / 20 for this simulation (last regret = 16.6).
- Policy 'Aggr(nb: 19, rate: 0.01)'	was ranked	15 / 20 for this simulation (last regret = 35.5).
- Policy 'UCBtuned'	was ranked	16 / 20 for this simulation (last regret = 36.8).
- Policy 'UCBrandomInit'	was ranked	17 / 20 for this simulation (last regret = 54.7).
- Policy 'UCB'	was ranked	18 / 20 for this simulation (last regret = 55.15).
- Policy 'UCBV'	was ranked	19 / 20 for this simulation (last regret = 82.75).
- Policy 'Softmax(temp: 0.05)'	was ranked	20 / 20 for this simulation (last regret = 482.75).
