 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Info: numba.jit seems to be available.
Info: numba.jit seems to be available.
Warning: Possibly wrong estimate of lower, amplitude ....
Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 9
Time horizon: 5000
Number of repetitions: 4
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 7.52 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 60.00% ...
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.795, 0.8, 0.805], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.795, 0.8, 0.805]
 - with 'arms' = [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.795), B(0.8), B(0.805)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.805
 - with 'minArm' = 0.01

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 101 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 66.50% ...
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.05, 0.05, 0.1], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.05, 0.05, 0.1]
 - with 'arms' = [B(0.01), B(0.01), B(0.01), B(0.02), B(0.02), B(0.02), B(0.05), B(0.05), B(0.1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.1
 - with 'minArm' = 0.01

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 14.5 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 93.22% ...
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [(2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1)], 'arm_type': <class 'Arms.Exponential.Exponential'>} ...
 - with 'arm_type' = <class 'Arms.Exponential.Exponential'>
 - with 'params' = [(2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1)]
 - with 'arms' = [Exp(2, 1), Exp(3, 1), Exp(4, 1), Exp(5, 1), Exp(6, 1), Exp(7, 1), Exp(8, 1), Exp(9, 1), Exp(10, 1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.432332358382
 - with 'minArm' = 0.099995460007

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 8.05 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 77.19% ...
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)], 'arm_type': <class 'Arms.Gaussian.Gaussian'>} ...
 - with 'arm_type' = <class 'Arms.Gaussian.Gaussian'>
 - with 'params' = [(0.1, 0.05), (0.2, 0.05), (0.3, 0.05), (0.4, 0.05), (0.5, 0.05), (0.6, 0.05), (0.7, 0.05), (0.8, 0.05), (0.9, 0.05)]
 - with 'arms' = [G(0.1, 0.05), G(0.2, 0.05), G(0.3, 0.05), G(0.4, 0.05), G(0.5, 0.05), G(0.6, 0.05), G(0.7, 0.05), G(0.8, 0.05), G(0.9, 0.05)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 2.72 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 60.00% ...
Creating a new MAB problem ...
  Taking arms of this MAB problem from a list of arms 'configuration' = [B(0.1), G(0.1, 0.05), Exp(10, 1), B(0.5), G(0.5, 0.05), Exp(1.59, 1), B(0.9), G(0.9, 0.05), Exp(0.215, 1)] ...
 - with 'arms' = [B(0.1), G(0.1, 0.05), Exp(10, 1), B(0.5), G(0.5, 0.05), Exp(1.59, 1), B(0.9), G(0.9, 0.05), Exp(0.215, 1)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.900000003233
 - with 'minArm' = 0.1

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 8.6e+07 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 60.00% ...
Number of environments to try: 6

Evaluating environment: <MAB{'maxArm': 0.90000000000000002, 'arms': [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)], 'minArm': 0.10000000000000001, 'nbArms': 9}>
- Adding policy #1 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #2 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #3 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #4 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #5 = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #6 = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #7 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #8 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #9 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...

===> Pre-computing the rewards ... Of shape (9, 4, 5000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/9: Aggr($N=5$, Exp4, updateAll) ...

- Evaluating policy #2/9: Aggr($N=5$, updateAll) ...

- Evaluating policy #3/9: Aggr($N=5$, Exp4) ...

- Evaluating policy #4/9: Aggr($N=5$) ...

- Evaluating policy #5/9: Thompson ...

Estimated order by the policy Thompson after 5000 steps: [0 2 3 5 4 1 6 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 80.25% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.33% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.28% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 89.16% (relative success)...

- Evaluating policy #6/9: BayesUCB ...

Estimated order by the policy BayesUCB after 5000 steps: [0 2 1 3 5 4 6 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 90.12% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.92% (relative success)...
  ==> Spearman    distance from optimal ordering: 100.00% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 91.95% (relative success)...

- Evaluating policy #7/9: KL-UCB++(Bern) ...

Estimated order by the policy KL-UCB++(Bern) after 5000 steps: [2 3 0 1 4 5 7 6 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 75.31% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.33% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.63% (relative success)...
  ==> Gestalt     distance from optimal ordering: 66.67% (relative success)...
  ==> Mean distance from optimal ordering: 85.23% (relative success)...

- Evaluating policy #8/9: KL-UCB++(Exp) ...

Estimated order by the policy KL-UCB++(Exp) after 5000 steps: [0 1 2 3 4 5 8 6 7] ...
  ==> Optimal arm identification: 88.89% (relative success)...
  ==> Manhattan   distance from optimal ordering: 90.12% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.92% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.99% (relative success)...
  ==> Gestalt     distance from optimal ordering: 88.89% (relative success)...
  ==> Mean distance from optimal ordering: 94.73% (relative success)...

- Evaluating policy #9/9: KL-UCB++(Gauss) ...

Estimated order by the policy KL-UCB++(Gauss) after 5000 steps: [2 0 1 5 3 4 6 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 80.25% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.65% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.91% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 89.39% (relative success)...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'Thompson'	was ranked	1 / 9 for this simulation (last regret = 15.65).
- Policy 'BayesUCB'	was ranked	2 / 9 for this simulation (last regret = 16.4).
- Policy 'Aggr($N=5$)'	was ranked	3 / 9 for this simulation (last regret = 25.15).
- Policy 'KL-UCB++(Bern)'	was ranked	4 / 9 for this simulation (last regret = 27.65).
- Policy 'Aggr($N=5$, updateAll)'	was ranked	5 / 9 for this simulation (last regret = 29.15).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	6 / 9 for this simulation (last regret = 35.4).
- Policy 'KL-UCB++(Gauss)'	was ranked	7 / 9 for this simulation (last regret = 46.65).
- Policy 'Aggr($N=5$, Exp4, updateAll)'	was ranked	8 / 9 for this simulation (last regret = 53.65).
- Policy 'KL-UCB++(Exp)'	was ranked	9 / 9 for this simulation (last regret = 176.15).


==> To see the figures, do :
eog plots/T5000_N4__9_algos/main*6689636491599587123.png

Evaluating environment: <MAB{'maxArm': 0.80500000000000005, 'arms': [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.795), B(0.8), B(0.805)], 'minArm': 0.01, 'nbArms': 9}>
- Adding policy #1 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #2 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': True, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #3 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': True, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #4 = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {'children': [{'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}, {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>}], 'decreaseRate': 'auto', 'update_like_exp4': False, 'update_all_children': False, 'unbiased': False}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #5 = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #6 = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {'amplitude': 1, 'lower': 0}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #7 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #8 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
- Adding policy #9 = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'amplitude': 1, 'horizon': 5000, 'lower': 0, 'klucb': <function klucbGauss at 0x7f5c963a7e18>}, 'archtype': <class 'Policies.klUCBPlusPlus.klUCBPlusPlus'>} ...

===> Pre-computing the rewards ... Of shape (9, 4, 5000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/9: Aggr($N=5$, Exp4, updateAll) ...

- Evaluating policy #2/9: Aggr($N=5$, updateAll) ...

- Evaluating policy #3/9: Aggr($N=5$, Exp4) ...

- Evaluating policy #4/9: Aggr($N=5$) ...

- Evaluating policy #5/9: Thompson ...

Estimated order by the policy Thompson after 5000 steps: [0 2 1 4 3 5 6 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 90.12% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.92% (relative success)...
  ==> Spearman    distance from optimal ordering: 100.00% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 91.95% (relative success)...

- Evaluating policy #6/9: BayesUCB ...

Estimated order by the policy BayesUCB after 5000 steps: [0 1 5 2 4 3 6 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 85.19% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.65% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.84% (relative success)...
  ==> Gestalt     distance from optimal ordering: 66.67% (relative success)...
  ==> Mean distance from optimal ordering: 87.84% (relative success)...

- Evaluating policy #7/9: KL-UCB++(Bern) ...

Estimated order by the policy KL-UCB++(Bern) after 5000 steps: [2 0 1 4 3 5 6 8 7] ...
  ==> Optimal arm identification: 99.38% (relative success)...
  ==> Manhattan   distance from optimal ordering: 80.25% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.65% (relative success)...
  ==> Spearman    distance from optimal ordering: 99.95% (relative success)...
  ==> Gestalt     distance from optimal ordering: 66.67% (relative success)...
  ==> Mean distance from optimal ordering: 86.63% (relative success)...

- Evaluating policy #8/9: KL-UCB++(Exp) ...

Estimated order by the policy KL-UCB++(Exp) after 5000 steps: [0 1 4 5 6 2 3 7 8] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 70.37% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 98.77% (relative success)...
  ==> Spearman    distance from optimal ordering: 98.01% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 86.23% (relative success)...

- Evaluating policy #9/9: KL-UCB++(Gauss) ...

Estimated order by the policy KL-UCB++(Gauss) after 5000 steps: [3 4 0 1 2 5 6 8 7] ...
  ==> Optimal arm identification: 99.38% (relative success)...
  ==> Manhattan   distance from optimal ordering: 65.43% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 97.82% (relative success)...
  ==> Spearman    distance from optimal ordering: 97.54% (relative success)...
  ==> Gestalt     distance from optimal ordering: 66.67% (relative success)...
  ==> Mean distance from optimal ordering: 81.87% (relative success)...
Giving the final ranks ...

Final ranking for this environment #1 :
- Policy 'KL-UCB++(Bern)'	was ranked	1 / 9 for this simulation (last regret = 46.555).
- Policy 'Thompson'	was ranked	2 / 9 for this simulation (last regret = 49.055).
- Policy 'Aggr($N=5$, Exp4, updateAll)'	was ranked	3 / 9 for this simulation (last regret = 53.555).
- Policy 'Aggr($N=5$)'	was ranked	4 / 9 for this simulation (last regret = 58.555).
- Policy 'KL-UCB++(Exp)'	was ranked	5 / 9 for this simulation (last regret = 62.305).
- Policy 'Aggr($N=5$, updateAll)'	was ranked	6 / 9 for this simulation (last regret = 65.055).
- Policy 'Aggr($N=5$, Exp4)'	was ranked	7 / 9 for this simulation (last regret = 67.055).
- Policy 'KL-UCB++(Gauss)'	was ranked	8 / 9 for this simulation (last regret = 70.805).
- Policy 'BayesUCB'	was ranked	9 / 9 for this simulation (last regret = 76.305).
