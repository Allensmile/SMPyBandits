 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Apparently, the arms have rewards in [0, 1] (lower = 0, amplitude = 1)
Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {'update_like_exp4': True, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'update_like_exp4': False, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 7
Time horizon: 10000
Number of repetitions: 100
Sampling rate DELTA_T_SAVE: 1
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1
Number of environments to try: 1

Evaluating environment: <MAB{'minArm': 0.10000000000000001, 'arms': [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)], 'maxArm': 0.90000000000000002, 'nbArms': 9}>
- Adding policy #1 = {'params': {'update_like_exp4': True, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {'update_like_exp4': True, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #2 = {'params': {'update_like_exp4': False, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {'update_like_exp4': False, 'unbiased': False, 'children': [{'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}, {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>}], 'update_all_children': False, 'decreaseRate': 'auto'}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[3]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this child player from a dictionnary 'children[4]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #3 = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #4 = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][3]' = {'params': {'lower': 0, 'amplitude': 1}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #5 = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][4]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbBern>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #6 = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][5]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbExp>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
- Adding policy #7 = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'lower': 0, 'amplitude': 1, 'klucb': <built-in function klucbGauss>}, 'archtype': <class 'Policies.klUCBPlus.klUCBPlus'>} ...

===> Pre-computing the rewards ... Of shape (9, 10000) ...
    In order for all simulated algorithms to face the same random rewards (robust comparaison of A1,..,An vs Aggr(A1,..,An)) ...


- Evaluating policy #1/7: Aggr($N=5$, Exp4) ...
