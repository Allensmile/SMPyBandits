Loaded experiments configuration from 'configuration.py' :
configuration['policies'] = [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa28de59da0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa2a1c50f98>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa27e084358>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}, {'params': {'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa28de59da0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa2a1c50f98>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa27e084358>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'update_all_children': False, 'learningRate': 0.01, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>}]
plots/ is already a directory here...
Number of policies in this comparaison: 18
Time horizon: 10000
Number of repetitions: 20
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.01, 0.02, 0.3, 0.4, 0.5, 0.6, 0.78, 0.8, 0.82]
 - with 'arms' = [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.82
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.01), B(0.02), B(0.3), B(0.4), B(0.5), B(0.6), B(0.78), B(0.8), B(0.82)], 'nbArms': 9, 'maxArm': 0.81999999999999995}>
- Adding policy #1 = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][0]' = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
- Adding policy #2 = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][1]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
- Adding policy #3 = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][2]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
- Adding policy #4 = TakeFixedArm(8) ...
  Using this already created policy 'self.cfg['policies'][3]' = TakeFixedArm(8) ...
- Adding policy #5 = TakeFixedArm(7) ...
  Using this already created policy 'self.cfg['policies'][4]' = TakeFixedArm(7) ...
- Adding policy #6 = TakeFixedArm(0) ...
  Using this already created policy 'self.cfg['policies'][5]' = TakeFixedArm(0) ...
- Adding policy #7 = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][6]' = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
- Adding policy #8 = {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][7]' = {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
- Adding policy #9 = {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][8]' = {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
- Adding policy #10 = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][9]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
- Adding policy #11 = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][10]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
- Adding policy #12 = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][11]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
- Adding policy #13 = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][12]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
- Adding policy #14 = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][13]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
- Adding policy #15 = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][14]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
- Adding policy #16 = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][15]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
- Adding policy #17 = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][16]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...
- Adding policy #18 = {'params': {'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa28de59da0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa2a1c50f98>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa27e084358>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'update_all_children': False, 'learningRate': 0.01, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this policy from a dictionnary 'self.cfg['policies'][17]' = {'params': {'children': [{'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>}, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa28de59da0>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa2a1c50f98>, <Policies.TakeFixedArm.TakeFixedArm object at 0x7fa27e084358>, {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>}, {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>}, {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>}, {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>}, {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>}, {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>}, {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>}, {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>}, {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>}, {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>}, {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>}], 'update_all_children': False, 'learningRate': 0.01, 'decreaseRate': 5000.0}, 'archtype': <class 'Policies.Aggr.Aggr'>} ...
  Creating this child player from a dictionnary 'children[0]' = {'params': {}, 'archtype': <class 'Policies.Uniform.Uniform'>} ...
  Creating this child player from a dictionnary 'children[1]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Creating this child player from a dictionnary 'children[2]' = {'params': {}, 'archtype': <class 'Policies.TakeRandomFixedArm.TakeRandomFixedArm'>} ...
  Using this already created player 'children[3]' = TakeFixedArm(8) ...
  Using this already created player 'children[4]' = TakeFixedArm(7) ...
  Using this already created player 'children[5]' = TakeFixedArm(0) ...
  Creating this child player from a dictionnary 'children[6]' = {'params': {'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonGreedy.EpsilonGreedy'>} ...
  Creating this child player from a dictionnary 'children[7]' = {'params': {'decreasingRate': 0.005, 'epsilon': 0.1}, 'archtype': <class 'Policies.EpsilonDecreasing.EpsilonDecreasing'>} ...
  Creating this child player from a dictionnary 'children[8]' = {'params': {'epsilon': 0.1, 'horizon': 10000}, 'archtype': <class 'Policies.EpsilonFirst.EpsilonFirst'>} ...
  Creating this child player from a dictionnary 'children[9]' = {'params': {}, 'archtype': <class 'Policies.UCBplus.UCBplus'>} ...
  Creating this child player from a dictionnary 'children[10]' = {'params': {}, 'archtype': <class 'Policies.UCBopt.UCBopt'>} ...
  Creating this child player from a dictionnary 'children[11]' = {'params': {}, 'archtype': <class 'Policies.UCBtuned.UCBtuned'>} ...
  Creating this child player from a dictionnary 'children[12]' = {'params': {}, 'archtype': <class 'Policies.Softmax.SoftmaxDecreasing'>} ...
  Creating this child player from a dictionnary 'children[13]' = {'params': {}, 'archtype': <class 'Policies.MOSS.MOSS'>} ...
  Creating this child player from a dictionnary 'children[14]' = {'params': {}, 'archtype': <class 'Policies.Thompson.Thompson'>} ...
  Creating this child player from a dictionnary 'children[15]' = {'params': {}, 'archtype': <class 'Policies.klUCB.klUCB'>} ...
  Creating this child player from a dictionnary 'children[16]' = {'params': {}, 'archtype': <class 'Policies.BayesUCB.BayesUCB'>} ...

- Evaluating policy #1/18: Uniform ...

- Evaluating policy #2/18: TakeRandomFixedArm([8]) ...

- Evaluating policy #3/18: TakeRandomFixedArm([1]) ...

- Evaluating policy #4/18: TakeFixedArm(8) ...

- Evaluating policy #5/18: TakeFixedArm(7) ...

- Evaluating policy #6/18: TakeFixedArm(0) ...

- Evaluating policy #7/18: EpsilonGreedy(0.1) ...

- Evaluating policy #8/18: EpsilonDecreasing(0.005) ...

- Evaluating policy #9/18: EpsilonFirst(0.1) ...

- Evaluating policy #10/18: UCBplus ...

- Evaluating policy #11/18: UCBopt ...

- Evaluating policy #12/18: UCBtuned ...

- Evaluating policy #13/18: Softmax(decreasing) ...

- Evaluating policy #14/18: MOSS ...

- Evaluating policy #15/18: Thompson ...

- Evaluating policy #16/18: klUCB ...

- Evaluating policy #17/18: BayesUCB ...

- Evaluating policy #18/18: Aggr(nb: 17, rate: 0.01) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Policy 'TakeFixedArm(8)'	was ranked	1 / 18 for this simulation (last regret = -3.73).
- Policy 'TakeRandomFixedArm([8])'	was ranked	2 / 18 for this simulation (last regret = 2.62).
- Policy 'Thompson'	was ranked	3 / 18 for this simulation (last regret = 83.17).
- Policy 'MOSS'	was ranked	4 / 18 for this simulation (last regret = 87.02).
- Policy 'BayesUCB'	was ranked	5 / 18 for this simulation (last regret = 96.22).
- Policy 'Softmax(decreasing)'	was ranked	6 / 18 for this simulation (last regret = 102.02).
- Policy 'UCBplus'	was ranked	7 / 18 for this simulation (last regret = 108.87).
- Policy 'klUCB'	was ranked	8 / 18 for this simulation (last regret = 109.62).
- Policy 'UCBopt'	was ranked	9 / 18 for this simulation (last regret = 141.72).
- Policy 'Aggr(nb: 17, rate: 0.01)'	was ranked	10 / 18 for this simulation (last regret = 173.67).
- Policy 'UCBtuned'	was ranked	11 / 18 for this simulation (last regret = 193.17).
- Policy 'TakeFixedArm(7)'	was ranked	12 / 18 for this simulation (last regret = 201.02).
- Policy 'EpsilonFirst(0.1)'	was ranked	13 / 18 for this simulation (last regret = 529.52).
- Policy 'EpsilonDecreasing(0.005)'	was ranked	14 / 18 for this simulation (last regret = 2204.07).
- Policy 'EpsilonGreedy(0.1)'	was ranked	15 / 18 for this simulation (last regret = 2456.92).
- Policy 'Uniform'	was ranked	16 / 18 for this simulation (last regret = 3471.17).
- Policy 'TakeRandomFixedArm([1])'	was ranked	17 / 18 for this simulation (last regret = 7958.47).
- Policy 'TakeFixedArm(0)'	was ranked	18 / 18 for this simulation (last regret = 8063.37).
