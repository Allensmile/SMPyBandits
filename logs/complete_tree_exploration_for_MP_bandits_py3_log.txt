Info: numba.jit seems to be available.
For depth = 1 ...

Starting to explore every transitions up-to depth 1 for this root state:
    State : M = 2, K = 2 and t = 0, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

    Using these policies:
  - Player #0/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
  - Player #1/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
    Using these arms:
  - Arm #0/2 has mean mu_1 ...
  - Arm #1/2 has mean mu_2 ...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 0, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

  we saw 10 different states...



There are 10 unique leafs for depth 1...

 Leaf with probability = mu_1*(-mu_2 + 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 1.  0.]
 [ 0.  0.]] =: S
[[ 1.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde


 Leaf with probability = 1/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [0 1]] =: N
[[0 0]
 [0 0]] =: Ntilde


 Leaf with probability = (mu_1 - 1)*(mu_2 - 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 1.  0.]
 [ 0.  1.]] =: S
[[ 1.  0.]
 [ 0.  1.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde


 Leaf with probability = mu_2*(-mu_1 + 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  1.]] =: S
[[ 0.  0.]
 [ 0.  1.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  1.]
 [ 1.  0.]] =: S
[[ 0.  1.]
 [ 1.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde


 Leaf with probability = 1/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [1 0]] =: N
[[0 0]
 [0 0]] =: Ntilde


 Leaf with probability = mu_2*(-mu_1 + 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 1.  0.]] =: S
[[ 0.  0.]
 [ 1.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde


 Leaf with probability = (mu_1 - 1)*(mu_2 - 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde


 Leaf with probability = mu_1*(-mu_2 + 1)/4:
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  1.]
 [ 0.  0.]] =: S
[[ 0.  1.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde


Done for exploring every transitions up-to depth 1 for this root state:
    State : M = 2, K = 2 and t = 0, depth = 1.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

    Using these policies:
  - Player #0/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
  - Player #1/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
    Using these arms:
  - Arm #0/2 has mean mu_1 ...
  - Arm #1/2 has mean mu_2 ...

There were 10 unique leafs for depth 1...


For depth 1, 0 leafs were found to be absorbing, and the probability of reaching any absorbing leaf is 0...

Creating a dot graph from the state...
Saving the dot graph to '/tmp/test.svg'...


[Enter] to continue...
For depth = 2 ...

Starting to explore every transitions up-to depth 2 for this root state:
    State : M = 2, K = 2 and t = 0, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

    Using these policies:
  - Player #0/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
  - Player #1/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
    Using these arms:
  - Arm #0/2 has mean mu_1 ...
  - Arm #1/2 has mean mu_2 ...

For depth = 2, exploring from this node :
    State : M = 2, K = 2 and t = 0, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

  we saw 10 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 1.  0.]
 [ 0.  0.]] =: S
[[ 1.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [0 1]] =: N
[[0 0]
 [0 0]] =: Ntilde

  we saw 1 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  1.]] =: S
[[ 0.  0.]
 [ 0.  1.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  1.]
 [ 1.  0.]] =: S
[[ 0.  1.]
 [ 1.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[1 0]
 [1 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

  we saw 1 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  0.]
 [ 1.  0.]] =: S
[[ 0.  0.]
 [ 1.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 1.  0.]
 [ 0.  1.]] =: S
[[ 1.  0.]
 [ 0.  1.]] =: Stilde
[[1 0]
 [0 1]] =: N
[[1 0]
 [0 1]] =: Ntilde

  we saw 4 different states...

For depth = 1, exploring from this node :
    State : M = 2, K = 2 and t = 1, depth = 0.
[[ 0.  1.]
 [ 0.  0.]] =: S
[[ 0.  1.]
 [ 0.  0.]] =: Stilde
[[0 1]
 [1 0]] =: N
[[0 1]
 [1 0]] =: Ntilde

  we saw 4 different states...



There are 16 unique leafs for depth 2...

 Leaf with probability = mu_1**2*mu_2*(-mu_2 + 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  1.]
 [ 1.  0.]] =: S
[[ 1.  1.]
 [ 1.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = (mu_1 - 1)**2*(mu_2 - 1)**2/2 + 1/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[0 0]
 [0 0]] =: Ntilde


 Leaf with probability = -mu_1*(mu_1 - 1)*(mu_2 - 1)**2/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  1.]
 [ 0.  0.]] =: S
[[ 0.  1.]
 [ 0.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2**2*(-mu_1 + 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  1.]
 [ 1.  1.]] =: S
[[ 0.  1.]
 [ 1.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1**2*mu_2**2/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  1.]
 [ 1.  1.]] =: S
[[ 1.  1.]
 [ 1.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_2**2*(mu_1 - 1)**2/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  0.]
 [ 1.  1.]] =: S
[[ 0.  0.]
 [ 1.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1**2*(mu_2 - 1)**2/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  1.]
 [ 0.  0.]] =: S
[[ 1.  1.]
 [ 0.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = -mu_1*(mu_1 - 1)*(mu_2 - 1)**2/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  0.]
 [ 0.  0.]] =: S
[[ 1.  0.]
 [ 0.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2*(mu_1 - 1)*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  1.]
 [ 0.  1.]] =: S
[[ 0.  1.]
 [ 0.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde

  At depth 2, this leaf was found to be absorbing !

 Leaf with probability = mu_1*mu_2**2*(-mu_1 + 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  0.]
 [ 1.  1.]] =: S
[[ 1.  0.]
 [ 1.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = -mu_2*(mu_1 - 1)**2*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  0.]
 [ 0.  1.]] =: S
[[ 0.  0.]
 [ 0.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2*(mu_1 - 1)*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  0.]
 [ 0.  1.]] =: S
[[ 1.  0.]
 [ 0.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1**2*mu_2*(-mu_2 + 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  1.]
 [ 0.  1.]] =: S
[[ 1.  1.]
 [ 0.  1.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2*(mu_1 - 1)*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  1.]
 [ 1.  0.]] =: S
[[ 0.  1.]
 [ 1.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


 Leaf with probability = mu_1*mu_2*(mu_1 - 1)*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 1.  0.]
 [ 1.  0.]] =: S
[[ 1.  0.]
 [ 1.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde

  At depth 2, this leaf was found to be absorbing !

 Leaf with probability = -mu_2*(mu_1 - 1)**2*(mu_2 - 1)/2:
    State : M = 2, K = 2 and t = 3, depth = 0.
[[ 0.  0.]
 [ 1.  0.]] =: S
[[ 0.  0.]
 [ 1.  0.]] =: Stilde
[[1 1]
 [1 1]] =: N
[[1 1]
 [1 1]] =: Ntilde


Done for exploring every transitions up-to depth 2 for this root state:
    State : M = 2, K = 2 and t = 0, depth = 2.
[[ 0.  0.]
 [ 0.  0.]] =: S
[[ 0.  0.]
 [ 0.  0.]] =: Stilde
[[0 0]
 [0 0]] =: N
[[0 0]
 [0 0]] =: Ntilde

    Using these policies:
  - Player #0/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
  - Player #1/2 uses Selfish_UCB_Ubar (which is <function Selfish_UCB_Ubar at 0x7fdd5562a9d8>)...
    Using these arms:
  - Arm #0/2 has mean mu_1 ...
  - Arm #1/2 has mean mu_2 ...

There were 16 unique leafs for depth 2...


For depth 2, 2 leafs were found to be absorbing, and the probability of reaching any absorbing leaf is mu_1*mu_2*(mu_1 - 1)*(mu_2 - 1)...

Creating a dot graph from the state...
Saving the dot graph to '/tmp/test.svg'...


[Enter] to continue...