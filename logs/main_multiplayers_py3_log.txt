Loaded experiments configuration from 'configuration.py' :
configuration = {'n_jobs': 1, 'collisionModel': <function onlyUniqUserGetsReward at 0x7f4e340368c8>, 'horizon': 10000, 'verbosity': 8, 'environment': [{'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]}], 'finalRanksOnAverage': True, 'players': [{'archtype': <class 'PoliciesMultiPlayers.Dummy.Dummy'>, 'params': {}}, {'archtype': <class 'PoliciesMultiPlayers.TakeFixedArm.TakeFixedArm'>, 'params': {'armIndex': 16}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [13, 14, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [6, 7, 8, 9]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 2, 3]}}, {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'learningRate': 0.01, 'decreaseRate': None, 'children': [{'archtype': <class 'PoliciesMultiPlayers.Dummy.Dummy'>, 'params': {}}, {'archtype': <class 'PoliciesMultiPlayers.TakeFixedArm.TakeFixedArm'>, 'params': {'armIndex': 16}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [13, 14, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [6, 7, 8, 9]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 2, 3]}}]}}], 'repetitions': 1, 'averageOn': 0.001}
plots is already a directory here...
Number of players in the multi-players game: 8
Time horizon: 10000
Number of repetitions: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Number of environments to try: 1

Evaluating environment: <MAB{'maxArm': 0.85, 'arms': [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)], 'nbArms': 17}>
- Adding player #1 = {'archtype': <class 'PoliciesMultiPlayers.Dummy.Dummy'>, 'params': {}} ...
- Adding player #2 = {'archtype': <class 'PoliciesMultiPlayers.TakeFixedArm.TakeFixedArm'>, 'params': {'armIndex': 16}} ...
- Adding player #3 = {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 16]}} ...
- Adding player #4 = {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [13, 14, 15, 16]}} ...
- Adding player #5 = {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [6, 7, 8, 9]}} ...
- Adding player #6 = {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 15, 16]}} ...
- Adding player #7 = {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 2, 3]}} ...
- Adding player #8 = {'archtype': <class 'Policies.Aggr.Aggr'>, 'params': {'learningRate': 0.01, 'decreaseRate': None, 'children': [{'archtype': <class 'PoliciesMultiPlayers.Dummy.Dummy'>, 'params': {}}, {'archtype': <class 'PoliciesMultiPlayers.TakeFixedArm.TakeFixedArm'>, 'params': {'armIndex': 16}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [13, 14, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [6, 7, 8, 9]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 15, 16]}}, {'archtype': <class 'PoliciesMultiPlayers.UniformOnSome.UniformOnSome'>, 'params': {'armIndexes': [0, 1, 2, 3]}}]}} ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player 'UniformOnSome([6, 7, 8, 9])'	was ranked	1 / 8 for this simulation (last regret = 4019.500).
- Player 'UniformOnSome([13, 14, 15, 16])'	was ranked	2 / 8 for this simulation (last regret = 4249.500).
- Player 'Aggr (nb:7, rate:0.01)'	was ranked	3 / 8 for this simulation (last regret = 4910.500).
- Player 'Dummy'	was ranked	4 / 8 for this simulation (last regret = 5211.500).
- Player 'TakeFixedArm(16)'	was ranked	5 / 8 for this simulation (last regret = 6772.500).
- Player 'UniformOnSome([0, 1, 15, 16])'	was ranked	6 / 8 for this simulation (last regret = 7284.500).
- Player 'UniformOnSome([0, 1, 2, 3])'	was ranked	7 / 8 for this simulation (last regret = 8379.500).
- Player 'UniformOnSome([0, 16])'	was ranked	8 / 8 for this simulation (last regret = 8477.500).
plots/MP__M8_T10000_N1__8_algos is already a directory here...
- Plotting the decentralized rewards, and saving the plot to plots/MP__M8_T10000_N1__8_algos/main____env1-1_4385987199349321990.png ...
Saving to plots/MP__M8_T10000_N1__8_algos/main____env1-1_4385987199349321990.png ...
 - Plotting the probability of picking the best arm, and saving the plot to plots/MP__M8_T10000_N1__8_algos/main_BestArmPulls____env1-1_4385987199349321990.png ...
Saving to plots/MP__M8_T10000_N1__8_algos/main_BestArmPulls____env1-1_4385987199349321990.png ...
 - Plotting the frequency of collision in each arm, and saving the plot to plots/MP__M8_T10000_N1__8_algos/main_FrequencyCollisions_BestArmPulls____env1-1_4385987199349321990.png ...
  - For Arm #1: Bernoulli, frequency of collisions is 6441.0  ...
  - For Arm #2: Bernoulli, frequency of collisions is 1865.0  ...
  - For Arm #3: Bernoulli, frequency of collisions is 391.0  ...
  - For Arm #4: Bernoulli, frequency of collisions is 379.0  ...
  - For Arm #5: Bernoulli, frequency of collisions is 2.0  ...
  - For Arm #6: Bernoulli, frequency of collisions is 4.0  ...
  - For Arm #7: Bernoulli, frequency of collisions is 318.0  ...
  - For Arm #8: Bernoulli, frequency of collisions is 332.0  ...
  - For Arm #9: Bernoulli, frequency of collisions is 369.0  ...
  - For Arm #10: Bernoulli, frequency of collisions is 412.0  ...
  - For Arm #11: Bernoulli, frequency of collisions is 2.0  ...
  - For Arm #12: Bernoulli, frequency of collisions is 2.0  ...
  - For Arm #13: Bernoulli, frequency of collisions is 10.0  ...
  - For Arm #14: Bernoulli, frequency of collisions is 1432.0  ...
  - For Arm #15: Bernoulli, frequency of collisions is 1472.0  ...
  - For Arm #16: Bernoulli, frequency of collisions is 3662.0  ...
  - For Arm #17: Bernoulli, frequency of collisions is 21023.0  ...
Saving to plots/MP__M8_T10000_N1__8_algos/main_FrequencyCollisions_BestArmPulls____env1-1_4385987199349321990.png ...
