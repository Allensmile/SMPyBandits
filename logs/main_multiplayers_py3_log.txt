Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]
 - with 'arms' = [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)]
 - with 'nbArms' = 17
 - with 'maxArm' = 0.85
OracleNotFair: initialized with 17 arms and 17 players ...
It decided to use this affectation of arms :
 - Player number 1 will always choose the arm number 16 ...
 - Player number 2 will always choose the arm number 3 ...
 - Player number 3 will always choose the arm number 2 ...
 - Player number 4 will always choose the arm number 8 ...
 - Player number 5 will always choose the arm number 9 ...
 - Player number 6 will always choose the arm number 6 ...
 - Player number 7 will always choose the arm number 11 ...
 - Player number 8 will always choose the arm number 7 ...
 - Player number 9 will always choose the arm number 5 ...
 - Player number 10 will always choose the arm number 15 ...
 - Player number 11 will always choose the arm number 1 ...
 - Player number 12 will always choose the arm number 14 ...
 - Player number 13 will always choose the arm number 12 ...
 - Player number 14 will always choose the arm number 4 ...
 - Player number 15 will always choose the arm number 0 ...
 - Player number 16 will always choose the arm number 13 ...
 - Player number 17 will always choose the arm number 10 ...
Loaded experiments configuration from 'configuration.py' :
configuration = {'collisionModel': <function onlyUniqUserGetsReward at 0x7f6cf2fce6a8>, 'finalRanksOnAverage': True, 'horizon': 1000, 'players': [<PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb4fee10>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb4feeb8>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb4fef60>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746048>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb7460f0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746198>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746240>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb7462e8>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746390>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746438>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb7464e0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746588>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746630>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb7466d8>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746780>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb746828>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f6ceb7468d0>], 'verbosity': 6, 'repetitions': 1, 'environment': [{'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'averageOn': 0.001, 'n_jobs': 1}
plots is already a directory here...
Number of players in the multi-players game: 17
Time horizon: 1000
Number of repetitions: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]
 - with 'arms' = [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)]
 - with 'nbArms' = 17
 - with 'maxArm' = 0.85
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 17, 'arms': [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)], 'maxArm': 0.85}>
- Adding player #1 = Child(#1, Fixed(16)) ...
  Using this already created player 'player' = Child(#1, Fixed(16)) ...
- Adding player #2 = Child(#2, Fixed(3)) ...
  Using this already created player 'player' = Child(#2, Fixed(3)) ...
- Adding player #3 = Child(#3, Fixed(2)) ...
  Using this already created player 'player' = Child(#3, Fixed(2)) ...
- Adding player #4 = Child(#4, Fixed(8)) ...
  Using this already created player 'player' = Child(#4, Fixed(8)) ...
- Adding player #5 = Child(#5, Fixed(9)) ...
  Using this already created player 'player' = Child(#5, Fixed(9)) ...
- Adding player #6 = Child(#6, Fixed(6)) ...
  Using this already created player 'player' = Child(#6, Fixed(6)) ...
- Adding player #7 = Child(#7, Fixed(11)) ...
  Using this already created player 'player' = Child(#7, Fixed(11)) ...
- Adding player #8 = Child(#8, Fixed(7)) ...
  Using this already created player 'player' = Child(#8, Fixed(7)) ...
- Adding player #9 = Child(#9, Fixed(5)) ...
  Using this already created player 'player' = Child(#9, Fixed(5)) ...
- Adding player #10 = Child(#10, Fixed(15)) ...
  Using this already created player 'player' = Child(#10, Fixed(15)) ...
- Adding player #11 = Child(#11, Fixed(1)) ...
  Using this already created player 'player' = Child(#11, Fixed(1)) ...
- Adding player #12 = Child(#12, Fixed(14)) ...
  Using this already created player 'player' = Child(#12, Fixed(14)) ...
- Adding player #13 = Child(#13, Fixed(12)) ...
  Using this already created player 'player' = Child(#13, Fixed(12)) ...
- Adding player #14 = Child(#14, Fixed(4)) ...
  Using this already created player 'player' = Child(#14, Fixed(4)) ...
- Adding player #15 = Child(#15, Fixed(0)) ...
  Using this already created player 'player' = Child(#15, Fixed(0)) ...
- Adding player #16 = Child(#16, Fixed(13)) ...
  Using this already created player 'player' = Child(#16, Fixed(13)) ...
- Adding player #17 = Child(#17, Fixed(10)) ...
  Using this already created player 'player' = Child(#17, Fixed(10)) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player 'Child(#10, Fixed(15))'	was ranked	1 / 17 for this simulation (last regret = -13.000).
- Player 'Child(#1, Fixed(16))'	was ranked	2 / 17 for this simulation (last regret = -6.000).
- Player 'Child(#12, Fixed(14))'	was ranked	3 / 17 for this simulation (last regret = 19.000).
- Player 'Child(#16, Fixed(13))'	was ranked	4 / 17 for this simulation (last regret = 28.000).
- Player 'Child(#13, Fixed(12))'	was ranked	5 / 17 for this simulation (last regret = 69.000).
- Player 'Child(#7, Fixed(11))'	was ranked	6 / 17 for this simulation (last regret = 81.000).
- Player 'Child(#17, Fixed(10))'	was ranked	7 / 17 for this simulation (last regret = 249.000).
- Player 'Child(#5, Fixed(9))'	was ranked	8 / 17 for this simulation (last regret = 328.000).
- Player 'Child(#4, Fixed(8))'	was ranked	9 / 17 for this simulation (last regret = 333.000).
- Player 'Child(#8, Fixed(7))'	was ranked	10 / 17 for this simulation (last regret = 390.000).
- Player 'Child(#6, Fixed(6))'	was ranked	11 / 17 for this simulation (last regret = 443.000).
- Player 'Child(#9, Fixed(5))'	was ranked	12 / 17 for this simulation (last regret = 491.000).
- Player 'Child(#14, Fixed(4))'	was ranked	13 / 17 for this simulation (last regret = 556.000).
- Player 'Child(#2, Fixed(3))'	was ranked	14 / 17 for this simulation (last regret = 831.000).
- Player 'Child(#3, Fixed(2))'	was ranked	15 / 17 for this simulation (last regret = 838.000).
- Player 'Child(#15, Fixed(0))'	was ranked	16 / 17 for this simulation (last regret = 841.000).
- Player 'Child(#11, Fixed(1))'	was ranked	17 / 17 for this simulation (last regret = 842.000).
plots/MP__M17_T1000_N1__17_algos is already a directory here...
- Plotting the decentralized rewards, and saving the plot to plots/MP__M17_T1000_N1__17_algos/main____env1-1_3832106398066538716.png ...
Saving to plots/MP__M17_T1000_N1__17_algos/main____env1-1_3832106398066538716.png ...
 - Plotting the probability of picking the best arm, and saving the plot to plots/MP__M17_T1000_N1__17_algos/main_BestArmPulls____env1-1_3832106398066538716.png ...
Saving to plots/MP__M17_T1000_N1__17_algos/main_BestArmPulls____env1-1_3832106398066538716.png ...
 - Plotting the probability of transmission on a free channel, and saving the plot to plots/MP__M17_T1000_N1__17_algos/main_FreeTransmissions_BestArmPulls____env1-1_3832106398066538716.png ...
Saving to plots/MP__M17_T1000_N1__17_algos/main_FreeTransmissions_BestArmPulls____env1-1_3832106398066538716.png ...
 - Plotting the frequency of collision in each arm, and saving the plot to plots/MP__M17_T1000_N1__17_algos/main_FrequencyCollisions_FreeTransmissions_BestArmPulls____env1-1_3832106398066538716.png ...
  - For #$1$: B(0.005),	frequency of collisions is 0.000  ...
  - For #$2$: B(0.01),	frequency of collisions is 0.000  ...
  - For #$3$: B(0.015),	frequency of collisions is 0.000  ...
  - For #$4$: B(0.02),	frequency of collisions is 0.000  ...
  - For #$5$: B(0.3),	frequency of collisions is 0.000  ...
  - For #$6$: B(0.35),	frequency of collisions is 0.000  ...
  - For #$7$: B(0.4),	frequency of collisions is 0.000  ...
  - For #$8$: B(0.45),	frequency of collisions is 0.000  ...
  - For #$9$: B(0.5),	frequency of collisions is 0.000  ...
  - For #$10$: B(0.55),	frequency of collisions is 0.000  ...
  - For #$11$: B(0.6),	frequency of collisions is 0.000  ...
  - For #$12$: B(0.78),	frequency of collisions is 0.000  ...
  - For #$13$: B(0.8),	frequency of collisions is 0.000  ...
  - For #$14$: B(0.82),	frequency of collisions is 0.000  ...
  - For #$15$: B(0.83),	frequency of collisions is 0.000  ...
  - For #$16$: B(0.84),	frequency of collisions is 0.000  ...
  - For #$17$: B(0.85),	frequency of collisions is 0.000  ...
==> No collisions to plot ... Stopping now  ...
