Loaded experiments configuration from 'configuration.py' :
configuration = {'collisionModel': <function onlyUniqUserGetsReward at 0x7fec7dca27b8>, 'n_jobs': -1, 'finalRanksOnAverage': True, 'players': [<PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7dc9f4e0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7db8cc50>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7dbaa0f0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7dbb6a90>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7dbb6860>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7fec7dbb6e48>], 'repetitions': 20, 'verbosity': 6, 'environment': [{'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]}], 'horizon': 10000, 'averageOn': 0.001}
plots is already a directory here...
Number of players in the multi-players game: 6
Time horizon: 10000
Number of repetitions: 20
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]
 - with 'arms' = [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)]
 - with 'nbArms' = 17
 - with 'maxArm' = 0.85
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)], 'maxArm': 0.85, 'nbArms': 17}>
- Adding player #1 = #1<klUCBPlus> ...
  Using this already created player 'player' = #1<klUCBPlus> ...
- Adding player #2 = #2<klUCBPlus> ...
  Using this already created player 'player' = #2<klUCBPlus> ...
- Adding player #3 = #3<klUCBPlus> ...
  Using this already created player 'player' = #3<klUCBPlus> ...
- Adding player #4 = #4<klUCBPlus> ...
  Using this already created player 'player' = #4<klUCBPlus> ...
- Adding player #5 = #5<klUCBPlus> ...
  Using this already created player 'player' = #5<klUCBPlus> ...
- Adding player #6 = #6<klUCBPlus> ...
  Using this already created player 'player' = #6<klUCBPlus> ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #3, '#3<klUCBPlus>'	was ranked	1 / 6 for this simulation (last rewards = 8168.9).
- Player #4, '#4<klUCBPlus>'	was ranked	2 / 6 for this simulation (last rewards = 8121.7).
- Player #1, '#1<klUCBPlus>'	was ranked	3 / 6 for this simulation (last rewards = 8102.6).
- Player #2, '#2<klUCBPlus>'	was ranked	4 / 6 for this simulation (last rewards = 8102.6).
- Player #5, '#5<klUCBPlus>'	was ranked	5 / 6 for this simulation (last rewards = 8001).
- Player #6, '#6<klUCBPlus>'	was ranked	6 / 6 for this simulation (last rewards = 7936.65).
plots/MP__M6_T10000_N20__6_algos is already a directory here...
- Plotting the decentralized rewards, and saving the plot to plots/MP__M6_T10000_N20__6_algos/main____env1-1_7107550243842582732.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main____env1-1_7107550243842582732.png ...
- Plotting the centralized  rewards, and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_RewardsCentralized____env1-1_7107550243842582732.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_RewardsCentralized____env1-1_7107550243842582732.png ...
 - Plotting the total nb of collision as a function of time, and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_NbCollisions_RewardsCentralized____env1-1_7107550243842582732.png ...
 - Plotting the cumulated total nb of collision as a function of time, and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_NbCollisionsCum_NbCollisions_RewardsCentralized____env1-1_7107550243842582732.png ...
 - Plotting the frequency of collision in each arm, and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_FrequencyCollisions_NbCollisionsCum_NbCollisions_RewardsCentralized____env1-1_7107550243842582732.png ...
  - For #$0$: $B(0.005)$,	frequency of collisions is 4.83333e-05  ...
  - For #$1$: $B(0.01)$,	frequency of collisions is 4e-05  ...
  - For #$2$: $B(0.015)$,	frequency of collisions is 3.33333e-05  ...
  - For #$3$: $B(0.02)$,	frequency of collisions is 5.66667e-05  ...
  - For #$4$: $B(0.3)$,	frequency of collisions is 8.5e-05  ...
  - For #$5$: $B(0.35)$,	frequency of collisions is 0.000115  ...
  - For #$6$: $B(0.4)$,	frequency of collisions is 0.000124167  ...
  - For #$7$: $B(0.45)$,	frequency of collisions is 0.000155  ...
  - For #$8$: $B(0.5)$,	frequency of collisions is 0.000200833  ...
  - For #$9$: $B(0.55)$,	frequency of collisions is 0.000225833  ...
  - For #$10$: $B(0.6)$,	frequency of collisions is 0.00027  ...
  - For #$11$: $B(0.78)$,	frequency of collisions is 0.000925833  ...
  - For #$12$: $B(0.8)$,	frequency of collisions is 0.0009225  ...
  - For #$13$: $B(0.82)$,	frequency of collisions is 0.00107  ...
  - For #$14$: $B(0.83)$,	frequency of collisions is 0.00111417  ...
  - For #$15$: $B(0.84)$,	frequency of collisions is 0.00108667  ...
  - For #$16$: $B(0.85)$,	frequency of collisions is 0.00115583  ...
