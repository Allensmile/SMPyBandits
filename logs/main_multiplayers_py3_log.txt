Loaded experiments configuration from 'configuration.py' :
configuration = {'environment': [{'params': [0.1, 0.9], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'collisionModel': <function onlyUniqUserGetsReward at 0x7f5fe35a5840>, 'finalRanksOnAverage': True, 'repetitions': 20, 'players': [<PoliciesMultiPlayers.rhoRand.oneRhoRand object at 0x7f5fe35a26d8>, <PoliciesMultiPlayers.rhoRand.oneRhoRand object at 0x7f5fe34b7978>], 'n_jobs': -1, 'verbosity': 6, 'averageOn': 0.001, 'horizon': 20000}
plots/ is already a directory here...
Number of players in the multi-players game: 2
Time horizon: 20000
Number of repetitions: 20
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.1, 0.9], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.9]
 - with 'arms' = [B(0.1), B(0.9)]
 - with 'nbArms' = 2
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 2, 'arms': [B(0.1), B(0.9)], 'maxArm': 0.9}>
- Adding player #1 = #1<rhoRand, klUCB, rank:1> ...
  Using this already created player 'player' = #1<rhoRand, klUCB, rank:1> ...
- Adding player #2 = #2<rhoRand, klUCB, rank:1> ...
  Using this already created player 'player' = #2<rhoRand, klUCB, rank:1> ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [2, 1] ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [2, 1] ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [2, 1] ...
 - End of one game, rhoRand found orthogonal ranks: ranks = [1, 2] ...
 - End of one game, rhoRand player #1<rhoRand, klUCB, rank:2> had rank 2 ...
 - End of one game, rhoRand player #2<rhoRand, klUCB, rank:2> had rank 2 ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #1, '#1<rhoRand, klUCB, rank:1>'	was ranked	1 / 2 for this simulation (last rewards = 11545.9).
- Player #2, '#2<rhoRand, klUCB, rank:1>'	was ranked	2 / 2 for this simulation (last rewards = 8442.95).
plots/MP__M2_T20000_N20__2_algos is already a directory here...
- Plotting the decentralized rewards, and saving the plot to plots/MP__M2_T20000_N20__2_algos/main____env1-1_7858014524190073679.png ...
Saving to plots/MP__M2_T20000_N20__2_algos/main____env1-1_7858014524190073679.png ...
