Loaded experiments configuration from 'configuration.py' :
configuration = {'horizon': 5000, 'finalRanksOnAverage': True, 'averageOn': 0.001, 'collisionModel': <function onlyUniqUserGetsReward at 0x7f1fe67cef28>, 'verbosity': 6, 'n_jobs': -1, 'environment': [{'params': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'repetitions': 20, 'delta_t_save': 1, 'players': [CentralizedMultiplePlay: Thompson, CentralizedMultiplePlay: Thompson, CentralizedMultiplePlay: Thompson, CentralizedMultiplePlay: Thompson, CentralizedMultiplePlay: Thompson, CentralizedMultiplePlay: Thompson]}
plots/ is already a directory here...
Number of players in the multi-players game: 6
Time horizon: 5000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'nbArms': 9, 'maxArm': 0.90000000000000002, 'arms': [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]}>
- Adding player #1 = #1<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #1<CentralizedMultiplePlay: Thompson> ...
- Adding player #2 = #2<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #2<CentralizedMultiplePlay: Thompson> ...
- Adding player #3 = #3<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #3<CentralizedMultiplePlay: Thompson> ...
- Adding player #4 = #4<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #4<CentralizedMultiplePlay: Thompson> ...
- Adding player #5 = #5<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #5<CentralizedMultiplePlay: Thompson> ...
- Adding player #6 = #6<CentralizedMultiplePlay: Thompson> ...
  Using this already created player 'player' = #6<CentralizedMultiplePlay: Thompson> ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #1, '#1<CentralizedMultiplePlay: Thompson>'	was ranked	1 / 6 for this simulation (last rewards = 3251).
- Player #2, '#2<CentralizedMultiplePlay: Thompson>'	was ranked	2 / 6 for this simulation (last rewards = 3247.1).
- Player #6, '#6<CentralizedMultiplePlay: Thompson>'	was ranked	3 / 6 for this simulation (last rewards = 3241.3).
- Player #5, '#5<CentralizedMultiplePlay: Thompson>'	was ranked	4 / 6 for this simulation (last rewards = 3239.15).
- Player #4, '#4<CentralizedMultiplePlay: Thompson>'	was ranked	5 / 6 for this simulation (last rewards = 3236.65).
- Player #3, '#3<CentralizedMultiplePlay: Thompson>'	was ranked	6 / 6 for this simulation (last rewards = 3223.45).


- Plotting the decentralized rewards


- Plotting the centralized regret
  - For 6 player, our lower bound gave = 48.84353309661165 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468105 ...
 - Our lowerbound = 48.84353309661165,
 - anandkumar_lowerbound = 15.030372473468105


- Plotting the centralized regret
  - For 6 player, our lower bound gave = 48.84353309661165 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468105 ...
 - Our lowerbound = 48.84353309661165,
 - anandkumar_lowerbound = 15.030372473468105


- Plotting the normalized centralized rewards
  - For 6 player, our lower bound gave = 48.84353309661165 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468105 ...
 - Our lowerbound = 48.84353309661165,
 - anandkumar_lowerbound = 15.030372473468105


- Plotting the number of switches


- Plotting the cumulative number of switches
 - Plotting the probability of picking the best arm
 - Plotting the total nb of collision as a function of time
 - Plotting the cumulated total nb of collision as a function of time
 - Plotting the frequency of collision in each arm
  - For #$0$: $B(0.1)$,	frequency of collisions is 0  ...
  - For #$1$: $B(0.2)$,	frequency of collisions is 0  ...
  - For #$2$: $B(0.3)$,	frequency of collisions is 0  ...
  - For #$3$: $B(0.4)$,	frequency of collisions is 0  ...
  - For #$4$: $B(0.5)$,	frequency of collisions is 0  ...
  - For #$5$: $B(0.6)$,	frequency of collisions is 0  ...
  - For #$6$: $B(0.7)$,	frequency of collisions is 0  ...
  - For #$7$: $B(0.8)$,	frequency of collisions is 0  ...
  - For #$8$: $B(0.9)$,	frequency of collisions is 0  ...
==> No collisions to plot ... Stopping now  ...
