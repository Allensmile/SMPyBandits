Loaded experiments configuration from 'configuration.py' :
configuration = {'horizon': 10000, 'verbosity': 6, 'finalRanksOnAverage': True, 'environment': [{'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.5, 0.9]}], 'n_jobs': -1, 'collisionModel': <function onlyUniqUserGetsReward at 0x7f31775326a8>, 'repetitions': 20, 'players': [BayesUCB, BayesUCB], 'averageOn': 0.001, 'delta_t_save': 1}
plots/ is already a directory here...
Number of players in the multi-players game: 2
Time horizon: 10000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.1, 0.5, 0.9]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.1, 0.5, 0.9]
 - with 'arms' = [B(0.1), B(0.5), B(0.9)]
 - with 'nbArms' = 3
 - with 'maxArm' = 0.9
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.1), B(0.5), B(0.9)], 'nbArms': 3, 'maxArm': 0.90000000000000002}>
- Adding player #1 = #1<BayesUCB> ...
  Using this already created player 'player' = #1<BayesUCB> ...
- Adding player #2 = #2<BayesUCB> ...
  Using this already created player 'player' = #2<BayesUCB> ...
