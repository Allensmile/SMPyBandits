Loaded experiments configuration from 'configuration.py' :
configuration = {'averageOn': 0.001, 'players': [BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB], 'horizon': 10000, 'collisionModel': <function onlyUniqUserGetsReward at 0x7fb1280efd08>, 'finalRanksOnAverage': True, 'n_jobs': -1, 'repetitions': 20, 'environment': [{'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.10000000000000001, 0.18888888888888888, 0.27777777777777779, 0.3666666666666667, 0.4555555555555556, 0.54444444444444451, 0.6333333333333333, 0.72222222222222221, 0.81111111111111112, 0.90000000000000002]}], 'delta_t_save': 1, 'verbosity': 6}
plots/ is already a directory here...
Number of players in the multi-players game: 6
Time horizon: 10000
Number of repetitions: 20
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.10000000000000001, 0.18888888888888888, 0.27777777777777779, 0.3666666666666667, 0.4555555555555556, 0.54444444444444451, 0.6333333333333333, 0.72222222222222221, 0.81111111111111112, 0.90000000000000002]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.10000000000000001, 0.18888888888888888, 0.27777777777777779, 0.3666666666666667, 0.4555555555555556, 0.54444444444444451, 0.6333333333333333, 0.72222222222222221, 0.81111111111111112, 0.90000000000000002]
 - with 'arms' = [B(0.1), B(0.189), B(0.278), B(0.367), B(0.456), B(0.544), B(0.633), B(0.722), B(0.811), B(0.9)]
 - with 'nbArms' = 10
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.1), B(0.189), B(0.278), B(0.367), B(0.456), B(0.544), B(0.633), B(0.722), B(0.811), B(0.9)], 'maxArm': 0.90000000000000002, 'minArm': 0.10000000000000001, 'nbArms': 10}>
- Adding player #1 = #1<BayesUCB> ...
  Using this already created player 'player' = #1<BayesUCB> ...
- Adding player #2 = #2<BayesUCB> ...
  Using this already created player 'player' = #2<BayesUCB> ...
- Adding player #3 = #3<BayesUCB> ...
  Using this already created player 'player' = #3<BayesUCB> ...
- Adding player #4 = #4<BayesUCB> ...
  Using this already created player 'player' = #4<BayesUCB> ...
- Adding player #5 = #5<BayesUCB> ...
  Using this already created player 'player' = #5<BayesUCB> ...
- Adding player #6 = #6<BayesUCB> ...
  Using this already created player 'player' = #6<BayesUCB> ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #5, '#5<BayesUCB>'	was ranked	1 / 6 for this simulation (last rewards = 7231.5).
- Player #2, '#2<BayesUCB>'	was ranked	2 / 6 for this simulation (last rewards = 7226.6).
- Player #1, '#1<BayesUCB>'	was ranked	3 / 6 for this simulation (last rewards = 6749.45).
- Player #4, '#4<BayesUCB>'	was ranked	4 / 6 for this simulation (last rewards = 6284.95).
- Player #6, '#6<BayesUCB>'	was ranked	5 / 6 for this simulation (last rewards = 6279.6).
- Player #3, '#3<BayesUCB>'	was ranked	6 / 6 for this simulation (last rewards = 6273.15).
plots/MP__M6_T10000_N20__6_algos is already a directory here...


- Plotting the decentralized rewards
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main____env1-1_3191066560998745663.png ...


- Plotting the centralized regret
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_RegretCentralized____env1-1_3191066560998745663.png ...
  - For 6 player, our lower bound gave = 66.2266694338571 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 21.245697522416272 ...
 - Our lowerbound = 66.2266694338571,
 - anandkumar_lowerbound = 21.245697522416272
Saving to plots/MP__M6_T10000_N20__6_algos/main_RegretCentralized____env1-1_3191066560998745663.png ...


- Plotting the centralized regret
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_RegretCentralized____env1-1_3191066560998745663.png ...
  - For 6 player, our lower bound gave = 66.2266694338571 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 21.245697522416272 ...
 - Our lowerbound = 66.2266694338571,
 - anandkumar_lowerbound = 21.245697522416272
Saving to plots/MP__M6_T10000_N20__6_algos/main_RegretCentralized____env1-1_3191066560998745663.png ...


- Plotting the normalized centralized rewards
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_NormalizedRewardsCentralized____env1-1_3191066560998745663.png ...
  - For 6 player, our lower bound gave = 66.2266694338571 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 21.245697522416272 ...
 - Our lowerbound = 66.2266694338571,
 - anandkumar_lowerbound = 21.245697522416272
Saving to plots/MP__M6_T10000_N20__6_algos/main_NormalizedRewardsCentralized____env1-1_3191066560998745663.png ...


- Plotting the number of switches
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_NbSwitchs____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_NbSwitchs____env1-1_3191066560998745663.png ...


- Plotting the cumulative number of switches
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_CumNbSwitchs____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_CumNbSwitchs____env1-1_3191066560998745663.png ...
 - Plotting the probability of picking the best arm
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_BestArmPulls____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_BestArmPulls____env1-1_3191066560998745663.png ...
 - Plotting the total nb of collision as a function of time
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_NbCollisions____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_NbCollisions____env1-1_3191066560998745663.png ...
 - Plotting the cumulated total nb of collision as a function of time
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_CumNbCollisions____env1-1_3191066560998745663.png ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_CumNbCollisions____env1-1_3191066560998745663.png ...
 - Plotting the frequency of collision in each arm
  and saving the plot to plots/MP__M6_T10000_N20__6_algos/main_FrequencyCollisions____env1-1_3191066560998745663.png ...
  - For #$0$: $B(0.1)$,	frequency of collisions is 9.25e-05  ...
  - For #$1$: $B(0.189)$,	frequency of collisions is 0.000116667  ...
  - For #$2$: $B(0.278)$,	frequency of collisions is 0.0001925  ...
  - For #$3$: $B(0.367)$,	frequency of collisions is 0.000320833  ...
  - For #$4$: $B(0.456)$,	frequency of collisions is 0.0009525  ...
  - For #$5$: $B(0.544)$,	frequency of collisions is 0.001555  ...
  - For #$6$: $B(0.633)$,	frequency of collisions is 0.00192917  ...
  - For #$7$: $B(0.722)$,	frequency of collisions is 0.00234333  ...
  - For #$8$: $B(0.811)$,	frequency of collisions is 0.00188583  ...
  - For #$9$: $B(0.9)$,	frequency of collisions is 0.00213  ...
Saving to plots/MP__M6_T10000_N20__6_algos/main_FrequencyCollisions____env1-1_3191066560998745663.png ...
