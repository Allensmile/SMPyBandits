 - Setting dpi of all figures to 110 ...
 - Setting 'figsize' of all figures to (19.8, 10.8) ...
Info: Using the regular tqdm() decorator ...
Info: numba.jit seems to be available.
Info: numba.jit seems to be available.
Loaded experiments configuration from 'configuration.py' :
configuration = {'collisionModel': <function onlyUniqUserGetsReward at 0x7fa596f61e18>, 'successive_players': [[Selfish(BayesUCB), Selfish(BayesUCB), Selfish(BayesUCB)], [rhoRand(BayesUCB), rhoRand(BayesUCB), rhoRand(BayesUCB)], [rhoLearn(BayesUCB), rhoLearn(BayesUCB), rhoLearn(BayesUCB)], [rhoLearn(BayesUCB), rhoLearn(BayesUCB), rhoLearn(BayesUCB)], [rhoLearn(BayesUCB), rhoLearn(BayesUCB), rhoLearn(BayesUCB)], [rhoLearn(BayesUCB), rhoLearn(BayesUCB), rhoLearn(BayesUCB)]], 'environment': [{'params': array([ 0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9]), 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'horizon': 100000, 'averageOn': 0.001, 'n_jobs': 1, 'players': [rhoRand(UCB), rhoRand(UCB), rhoRand(UCB)], 'finalRanksOnAverage': True, 'delta_t_save': 1, 'repetitions': 1, 'verbosity': 6}
plots/ is already a directory here...
Number of players in the multi-players game: 3
Time horizon: 100000
Number of repetitions: 1
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': array([ 0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9]), 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [ 0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 7.52 ... 
 - a Optimal Arm Identification factor H_OI(mu) = 48.89% ...
Number of environments to try: 1

Evaluating environment: MAB(nbArms: 9, arms: [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)], minArm: 0.1, maxArm: 0.9)
- Adding player #1 = #1<$\rho^{\mathrm{Rand}}$, UCB> ...
  Using this already created player 'player' = #1<$\rho^{\mathrm{Rand}}$, UCB> ...
- Adding player #2 = #2<$\rho^{\mathrm{Rand}}$, UCB> ...
  Using this already created player 'player' = #2<$\rho^{\mathrm{Rand}}$, UCB> ...
- Adding player #3 = #3<$\rho^{\mathrm{Rand}}$, UCB> ...
  Using this already created player 'player' = #3<$\rho^{\mathrm{Rand}}$, UCB> ...

Estimated order by the policy #1<$\rho^{\mathrm{Rand}}$, UCB, rank:2> after 100000 steps: [6 5 4 1 3 0 2 7 8] ...
  ==> Optimal arm identification: 83.33% (relative success)...
  ==> Manhattan   distance from optimal ordering: 40.74% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 0.00% (relative success)...
  ==> Spearman    distance from optimal ordering: 29.99% (relative success)...
  ==> Gestalt     distance from optimal ordering: 33.33% (relative success)...
  ==> Mean distance from optimal ordering: 26.02% (relative success)...

Estimated order by the policy #2<$\rho^{\mathrm{Rand}}$, UCB, rank:1> after 100000 steps: [6 5 4 3 2 7 1 0 8] ...
  ==> Optimal arm identification: 50.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 30.86% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 70.29% (relative success)...
  ==> Spearman    distance from optimal ordering: 29.99% (relative success)...
  ==> Gestalt     distance from optimal ordering: 33.33% (relative success)...
  ==> Mean distance from optimal ordering: 41.12% (relative success)...

Estimated order by the policy #3<$\rho^{\mathrm{Rand}}$, UCB, rank:3> after 100000 steps: [0 1 2 3 5 4 6 8 7] ...
  ==> Optimal arm identification: 100.00% (relative success)...
  ==> Manhattan   distance from optimal ordering: 90.12% (relative success)...
  ==> Kendell Tau distance from optimal ordering: 99.92% (relative success)...
  ==> Spearman    distance from optimal ordering: 100.00% (relative success)...
  ==> Gestalt     distance from optimal ordering: 77.78% (relative success)...
  ==> Mean distance from optimal ordering: 91.95% (relative success)...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #2, '#2<$\rho^{\mathrm{Rand}}$, UCB>'	was ranked	1 / 3 for this simulation (last rewards = 88548).
- Player #1, '#1<$\rho^{\mathrm{Rand}}$, UCB>'	was ranked	2 / 3 for this simulation (last rewards = 78970).
- Player #3, '#3<$\rho^{\mathrm{Rand}}$, UCB>'	was ranked	3 / 3 for this simulation (last rewards = 70383).
plots/MP__M3_T100000_N1 is already a directory here...


- Plotting the decentralized rewards
  and saving the plot to plots/MP__M3_T100000_N1/main____env1-1_4901532838986488981 ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main____env1-1_4901532838986488981.png' created of size '168491b', at 'Mon Mar 20 16:02:06 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main____env1-1_4901532838986488981.pdf' created of size '88215b', at 'Mon Mar 20 16:02:07 2017' ...


- Plotting the centralized fairness (STD)
  and saving the plot to plots/MP__M3_T100000_N1/main_FairnessSTD____env1-1_4901532838986488981 ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_FairnessSTD____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_FairnessSTD____env1-1_4901532838986488981.png' created of size '123409b', at 'Mon Mar 20 16:02:07 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_FairnessSTD____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_FairnessSTD____env1-1_4901532838986488981.pdf' created of size '112493b', at 'Mon Mar 20 16:02:07 2017' ...


- Plotting the centralized regret
  and saving the plot to plots/MP__M3_T100000_N1/main_RegretCentralized____env1-1_4901532838986488981 ...
  - For 3 players, our lower bound gave = 33.5 ...
  - For 3 players, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 17.8 ...

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 7.52 for 1-player problem ... 
 - a Optimal Arm Identification factor H_OI(mu) = 48.89% ...
 - Our lowerbound = 33.5,
 - [Anandkumar et al] lowerbound = 17.8
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_RegretCentralized____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_RegretCentralized____env1-1_4901532838986488981.png' created of size '217609b', at 'Mon Mar 20 16:02:10 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_RegretCentralized____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_RegretCentralized____env1-1_4901532838986488981.pdf' created of size '235224b', at 'Mon Mar 20 16:02:10 2017' ...


- Plotting the centralized regret
  and saving the plot to plots/MP__M3_T100000_N1/main_RegretCentralized_semilogx____env1-1_4901532838986488981 ...
  - For 3 players, our lower bound gave = 33.5 ...
  - For 3 players, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 17.8 ...

This MAB problem has: 
 - a [Lai & Robbins] complexity constant C(mu) = 7.52 for 1-player problem ... 
 - a Optimal Arm Identification factor H_OI(mu) = 48.89% ...
 - Our lowerbound = 33.5,
 - [Anandkumar et al] lowerbound = 17.8
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_RegretCentralized_semilogx____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_RegretCentralized_semilogx____env1-1_4901532838986488981.png' created of size '219367b', at 'Mon Mar 20 16:02:13 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_RegretCentralized_semilogx____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_RegretCentralized_semilogx____env1-1_4901532838986488981.pdf' created of size '195537b', at 'Mon Mar 20 16:02:13 2017' ...


- Plotting the number of switches
  and saving the plot to plots/MP__M3_T100000_N1/main_NbSwitchs____env1-1_4901532838986488981 ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_NbSwitchs____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_NbSwitchs____env1-1_4901532838986488981.png' created of size '105597b', at 'Mon Mar 20 16:02:14 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_NbSwitchs____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_NbSwitchs____env1-1_4901532838986488981.pdf' created of size '39033b', at 'Mon Mar 20 16:02:14 2017' ...


- Plotting the cumulative number of switches
  and saving the plot to plots/MP__M3_T100000_N1/main_CumNbSwitchs____env1-1_4901532838986488981 ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_CumNbSwitchs____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_CumNbSwitchs____env1-1_4901532838986488981.png' created of size '132411b', at 'Mon Mar 20 16:02:15 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_CumNbSwitchs____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_CumNbSwitchs____env1-1_4901532838986488981.pdf' created of size '43321b', at 'Mon Mar 20 16:02:15 2017' ...
 - Plotting the probability of picking the best arm
  and saving the plot to plots/MP__M3_T100000_N1/main_BestArmPulls____env1-1_4901532838986488981 ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_BestArmPulls____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_BestArmPulls____env1-1_4901532838986488981.png' created of size '161885b', at 'Mon Mar 20 16:02:15 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_BestArmPulls____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_BestArmPulls____env1-1_4901532838986488981.pdf' created of size '48695b', at 'Mon Mar 20 16:02:15 2017' ...
 - Plotting the total nb of collision as a function of time
  and saving the plot to plots/MP__M3_T100000_N1/main_NbCollisions____env1-1_4901532838986488981 ...
No upper bound for the non-cumulated number of collisions...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_NbCollisions____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_NbCollisions____env1-1_4901532838986488981.png' created of size '85572b', at 'Mon Mar 20 16:02:16 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_NbCollisions____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_NbCollisions____env1-1_4901532838986488981.pdf' created of size '48725b', at 'Mon Mar 20 16:02:16 2017' ...
 - Plotting the cumulated total nb of collision as a function of time
  and saving the plot to plots/MP__M3_T100000_N1/main_CumNbCollisions____env1-1_4901532838986488981 ...
  - For 3 players, Upsilon(M,M) = (2M-1 choose M) = 10 ...
  - For 3 players, the bound with (1 + pi^2 / 3) = 270 ...
  - For 3 players, the bound with (8 / (mu_b^* - mu_a^*)^2) = 1.09e+04 ...
  - For 3 players, Anandkumar et al. upper bound for the total cumulated number of collisions is 4.14e+06 here ...
Anandkumar et al. upper bound for the non-cumulated number of collisions is 4.14e+06 * log(t) here ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_CumNbCollisions____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_CumNbCollisions____env1-1_4901532838986488981.png' created of size '109558b', at 'Mon Mar 20 16:02:20 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_CumNbCollisions____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_CumNbCollisions____env1-1_4901532838986488981.pdf' created of size '38279b', at 'Mon Mar 20 16:02:21 2017' ...
 - Plotting the frequency of collision in each arm
  and saving the plot to plots/MP__M3_T100000_N1/main_FrequencyCollisions____env1-1_4901532838986488981 ...
  - For #$0$: $B(0.1)$ ($0.0%$$\%$),	frequency of collisions is 6.66667e-06  ...
  - For #$1$: $B(0.2)$ ($0.0%$$\%$),	frequency of collisions is 2.66667e-05  ...
  - For #$2$: $B(0.3)$ ($0.0%$$\%$),	frequency of collisions is 1.33333e-05  ...
  - For #$3$: $B(0.4)$ ($0.0%$$\%$),	frequency of collisions is 3.33333e-05  ...
  - For #$4$: $B(0.5)$ ($0.0%$$\%$),	frequency of collisions is 0.000163333  ...
  - For #$5$: $B(0.6)$ ($0.0%$$\%$),	frequency of collisions is 0.00023  ...
  - For #$6$: $B(0.7)$ ($0.1%$$\%$),	frequency of collisions is 0.00120333  ...
  - For #$7$: $B(0.8)$ ($0.2%$$\%$),	frequency of collisions is 0.00161333  ...
  - For #$8$: $B(0.9)$ ($0.1%$$\%$),	frequency of collisions is 0.0015  ...
Saving figure with format png, to file 'plots/MP__M3_T100000_N1/main_FrequencyCollisions____env1-1_4901532838986488981.png'...
       Saved! 'plots/MP__M3_T100000_N1/main_FrequencyCollisions____env1-1_4901532838986488981.png' created of size '119449b', at 'Mon Mar 20 16:02:21 2017' ...
Saving figure with format pdf, to file 'plots/MP__M3_T100000_N1/main_FrequencyCollisions____env1-1_4901532838986488981.pdf'...
       Saved! 'plots/MP__M3_T100000_N1/main_FrequencyCollisions____env1-1_4901532838986488981.pdf' created of size '36849b', at 'Mon Mar 20 16:02:21 2017' ...


==> To see the figures, do :
eog plots/MP__M3_T100000_N1/main*4901532838986488981.png
Done for simulations main_multiplayers.py ...
