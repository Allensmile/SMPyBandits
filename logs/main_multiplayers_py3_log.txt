Loaded experiments configuration from 'configuration.py' :
configuration = {'players': [<PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e8b24e0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e8b2908>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e8b2d30>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e89e198>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e89e5c0>, <PoliciesMultiPlayers.ChildPointer.ChildPointer object at 0x7f601e89e9e8>], 'averageOn': 0.001, 'environment': [{'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]}], 'repetitions': 1, 'verbosity': 6, 'finalRanksOnAverage': True, 'horizon': 10000, 'collisionModel': <function onlyUniqUserGetsReward at 0x7f601e96b7b8>, 'n_jobs': 1}
plots is already a directory here...
Number of players in the multi-players game: 6
Time horizon: 10000
Number of repetitions: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'arm_type': <class 'Arms.Bernoulli.Bernoulli'>, 'params': [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.005, 0.01, 0.015, 0.02, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.78, 0.8, 0.82, 0.83, 0.84, 0.85]
 - with 'arms' = [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)]
 - with 'nbArms' = 17
 - with 'maxArm' = 0.85
Number of environments to try: 1

Evaluating environment: <MAB{'arms': [B(0.005), B(0.01), B(0.015), B(0.02), B(0.3), B(0.35), B(0.4), B(0.45), B(0.5), B(0.55), B(0.6), B(0.78), B(0.8), B(0.82), B(0.83), B(0.84), B(0.85)], 'maxArm': 0.85, 'nbArms': 17}>
- Adding player #1 = Child(#1, Thompson) ...
  Using this already created player 'player' = Child(#1, Thompson) ...
- Adding player #2 = Child(#2, Thompson) ...
  Using this already created player 'player' = Child(#2, Thompson) ...
- Adding player #3 = Child(#3, Thompson) ...
  Using this already created player 'player' = Child(#3, Thompson) ...
- Adding player #4 = Child(#4, Thompson) ...
  Using this already created player 'player' = Child(#4, Thompson) ...
- Adding player #5 = Child(#5, Thompson) ...
  Using this already created player 'player' = Child(#5, Thompson) ...
- Adding player #6 = Child(#6, Thompson) ...
  Using this already created player 'player' = Child(#6, Thompson) ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #1, 'Child(#1, Thompson)'	was ranked	1 / 6 for this simulation (last regret = 128.350).
- Player #6, 'Child(#6, Thompson)'	was ranked	2 / 6 for this simulation (last regret = 291.350).
- Player #4, 'Child(#4, Thompson)'	was ranked	3 / 6 for this simulation (last regret = 334.350).
- Player #5, 'Child(#5, Thompson)'	was ranked	4 / 6 for this simulation (last regret = 421.350).
- Player #2, 'Child(#2, Thompson)'	was ranked	5 / 6 for this simulation (last regret = 606.350).
- Player #3, 'Child(#3, Thompson)'	was ranked	6 / 6 for this simulation (last regret = 829.350).
plots/MP__M6_T10000_N1__6_algos is already a directory here...
- Plotting the decentralized rewards, and saving the plot to plots/MP__M6_T10000_N1__6_algos/main____env1-1_7063855065724837342.png ...
Saving to plots/MP__M6_T10000_N1__6_algos/main____env1-1_7063855065724837342.png ...
- Plotting the centralized  rewards, and saving the plot to plots/MP__M6_T10000_N1__6_algos/main_RewardsCentralized____env1-1_7063855065724837342.png ...
Saving to plots/MP__M6_T10000_N1__6_algos/main_RewardsCentralized____env1-1_7063855065724837342.png ...
 - Plotting the frequency of collision in each arm, and saving the plot to plots/MP__M6_T10000_N1__6_algos/main_FrequencyCollisions_RewardsCentralized____env1-1_7063855065724837342.png ...
  - For #$0$: B(0.005),	frequency of collisions is 0.000  ...
  - For #$1$: B(0.01),	frequency of collisions is 0.000  ...
  - For #$2$: B(0.015),	frequency of collisions is 0.000  ...
  - For #$3$: B(0.02),	frequency of collisions is 0.000  ...
  - For #$4$: B(0.3),	frequency of collisions is 0.000  ...
  - For #$5$: B(0.35),	frequency of collisions is 0.000  ...
  - For #$6$: B(0.4),	frequency of collisions is 0.000  ...
  - For #$7$: B(0.45),	frequency of collisions is 0.000  ...
  - For #$8$: B(0.5),	frequency of collisions is 0.000  ...
  - For #$9$: B(0.55),	frequency of collisions is 0.000  ...
  - For #$10$: B(0.6),	frequency of collisions is 0.000  ...
  - For #$11$: B(0.78),	frequency of collisions is 0.001  ...
  - For #$12$: B(0.8),	frequency of collisions is 0.001  ...
  - For #$13$: B(0.82),	frequency of collisions is 0.001  ...
  - For #$14$: B(0.83),	frequency of collisions is 0.001  ...
  - For #$15$: B(0.84),	frequency of collisions is 0.002  ...
  - For #$16$: B(0.85),	frequency of collisions is 0.001  ...
Saving to plots/MP__M6_T10000_N1__6_algos/main_FrequencyCollisions_RewardsCentralized____env1-1_7063855065724837342.png ...
