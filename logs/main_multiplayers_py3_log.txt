Loaded experiments configuration from 'configuration.py' :
configuration = {'n_jobs': -1, 'environment': [{'params': [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'averageOn': 0.001, 'verbosity': 6, 'players': [BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB, BayesUCB], 'collisionModel': <function onlyUniqUserGetsReward at 0x7f9c4ac9fd08>, 'horizon': 20000, 'repetitions': 50, 'finalRanksOnAverage': True, 'delta_t_save': 1}
plots/ is already a directory here...
Number of players in the multi-players game: 9
Time horizon: 20000
Number of repetitions: 50
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1
Number of environments to try: 1

Evaluating environment: <MAB{'minArm': 0.10000000000000001, 'arms': [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)], 'maxArm': 0.90000000000000002, 'nbArms': 9}>
- Adding player #1 = #1<BayesUCB> ...
  Using this already created player 'player' = #1<BayesUCB> ...
- Adding player #2 = #2<BayesUCB> ...
  Using this already created player 'player' = #2<BayesUCB> ...
- Adding player #3 = #3<BayesUCB> ...
  Using this already created player 'player' = #3<BayesUCB> ...
- Adding player #4 = #4<BayesUCB> ...
  Using this already created player 'player' = #4<BayesUCB> ...
- Adding player #5 = #5<BayesUCB> ...
  Using this already created player 'player' = #5<BayesUCB> ...
- Adding player #6 = #6<BayesUCB> ...
  Using this already created player 'player' = #6<BayesUCB> ...
- Adding player #7 = #7<BayesUCB> ...
  Using this already created player 'player' = #7<BayesUCB> ...
- Adding player #8 = #8<BayesUCB> ...
  Using this already created player 'player' = #8<BayesUCB> ...
- Adding player #9 = #9<BayesUCB> ...
  Using this already created player 'player' = #9<BayesUCB> ...
