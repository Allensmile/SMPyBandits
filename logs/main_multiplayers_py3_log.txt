Loaded experiments configuration from 'configuration.py' :
configuration = {'finalRanksOnAverage': True, 'horizon': 20000, 'repetitions': 50, 'delta_t_save': 1, 'environment': [{'params': [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>}], 'averageOn': 0.001, 'players': [MOSS, MOSS, MOSS, MOSS, MOSS, MOSS], 'n_jobs': -1, 'collisionModel': <function onlyUniqUserGetsReward at 0x7f6d1c175d08>, 'verbosity': 6}
plots/ is already a directory here...
Number of players in the multi-players game: 6
Time horizon: 20000
Number of repetitions: 50
Sampling rate DELTA_T_SAVE: 1
Using collision model: onlyUniqUserGetsReward
  Detail:  Simple collision model where only the players alone on one arm sample it and receive the reward.

    - This is the default collision model, cf. https://arxiv.org/abs/0910.2065v3 collision model 1.
    - The numpy array 'choices' is increased according to the number of users who collided (it is NOT binary).
    
Creating a new MAB problem ...
  Reading arms of this MAB problem from a dictionnary 'configuration' = {'params': [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002], 'arm_type': <class 'Arms.Bernoulli.Bernoulli'>} ...
 - with 'arm_type' = <class 'Arms.Bernoulli.Bernoulli'>
 - with 'params' = [0.10000000000000001, 0.20000000000000001, 0.30000000000000004, 0.40000000000000002, 0.5, 0.59999999999999998, 0.70000000000000007, 0.80000000000000004, 0.90000000000000002]
 - with 'arms' = [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)]
 - with 'nbArms' = 9
 - with 'maxArm' = 0.9
 - with 'minArm' = 0.1
Number of environments to try: 1

Evaluating environment: <MAB{'maxArm': 0.90000000000000002, 'nbArms': 9, 'arms': [B(0.1), B(0.2), B(0.3), B(0.4), B(0.5), B(0.6), B(0.7), B(0.8), B(0.9)], 'minArm': 0.10000000000000001}>
- Adding player #1 = #1<MOSS> ...
  Using this already created player 'player' = #1<MOSS> ...
- Adding player #2 = #2<MOSS> ...
  Using this already created player 'player' = #2<MOSS> ...
- Adding player #3 = #3<MOSS> ...
  Using this already created player 'player' = #3<MOSS> ...
- Adding player #4 = #4<MOSS> ...
  Using this already created player 'player' = #4<MOSS> ...
- Adding player #5 = #5<MOSS> ...
  Using this already created player 'player' = #5<MOSS> ...
- Adding player #6 = #6<MOSS> ...
  Using this already created player 'player' = #6<MOSS> ...
Giving the final ranks ...

Final ranking for this environment #0 :
- Player #1, '#1<MOSS>'	was ranked	1 / 6 for this simulation (last rewards = 13566.1).
- Player #6, '#6<MOSS>'	was ranked	2 / 6 for this simulation (last rewards = 13223.9).
- Player #2, '#2<MOSS>'	was ranked	3 / 6 for this simulation (last rewards = 13184.9).
- Player #4, '#4<MOSS>'	was ranked	4 / 6 for this simulation (last rewards = 13172.9).
- Player #3, '#3<MOSS>'	was ranked	5 / 6 for this simulation (last rewards = 12429).
- Player #5, '#5<MOSS>'	was ranked	6 / 6 for this simulation (last rewards = 11582.3).
plots/MP__M6_T20000_N50__6_algos is already a directory here...


- Plotting the decentralized rewards
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main____env1-1_7783860947414824590.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main____env1-1_7783860947414824590.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main____env1-1_7783860947414824590.png ...


- Plotting the centralized regret
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_RegretCentralized____env1-1_7783860947414824590.png ...
  - For 6 player, our lower bound gave = 48.843533096611566 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468088 ...
 - Our lowerbound = 48.843533096611566,
 - anandkumar_lowerbound = 15.030372473468088
Saving to plots/MP__M6_T20000_N50__6_algos/main_RegretCentralized____env1-1_7783860947414824590.png ...


- Plotting the centralized reg

- Plotting the centralized regret
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_RegretCentralized____env1-1_8920808627228473894.png ...
  - For 6 player, our lower bound gave = 48.843533096611566 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468088 ...
 - Our lowerbound = 48.843533096611566,
 - anandkumar_lowerbound = 15.030372473468088
Saving to plots/MP__M6_T20000_N50__6_algos/main_RegretCentralized____env

- Plotting the normalized centralized rewards
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_NormalizedRewardsCentralized____env1-1_7783860947414824590.png ...
  - For 6 player, our lower bound gave = 48.843533096611566 ...
  - For 6 player, the initial lower bound in Theorem 6 from [Anandkumar et al., 2010] gave = 15.030372473468088 ...
 - Our lowerbound = 48.843533096611566,
 - anandkumar_lowerbound = 15.030372473468088
Saving to plots/MP__M6_T20000_N50__6_algos/main_NormalizedRewardsCentralized____env1-1_7783860947414824590.png ...


- Plotting the number of switc

- Plotting the number of switches
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_NbSwitchs____env1-1_8920808627228473894.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_NbSwitchs____env

- Plotting the cumulative number of switches
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_CumNbSwitchs____env1-1_7783860947414824590.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_CumNbSwitchs____env1-1_7783860947414824590.png ...
 - Plotting the probability of picking the best arm
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_BestArmPulls____env1-1_7783860947414824590.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_BestArmPulls____env1-1_7783860947414824590.png ...
 - Plotting the total nb of collision as a function of time
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_NbCollisions____env1-1_7783860947414824590.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_NbCollisions____env1-1_7783860947414824590.png ...
 - Plotting the cumulated total  - Plotting the cumulated total nb of collision as a function of time
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_CumNbCollisions____env1-1_8920808627228473894.png ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_CumNbCollisions____env - Plotting the frequency of col - Plotting the frequency of collision in each arm
  and saving the plot to plots/MP__M6_T20000_N50__6_algos/main_FrequencyCollisions____env1-1_8920808627228473894.png ...
  - For #$0$: $B(0.1)$,	frequency of collisions is 0.000102  ...
  - For #$1$: $B(0.2)$,	frequency of collisions is 0.000167833  ...
  - For #$2$: $B(0.3)$,	frequency of collisions is 0.000310667  ...
  - For #$3$: $B(0.4)$,	frequency of collisions is 0.000681333  ...
  - For #$4$: $B(0.5)$,	frequency of collisions is 0.0010735  ...
  - For #$5$: $B(0.6)$,	frequency of collisions is 0.001466  ...
  - For #$6$: $B(0.7)$,	frequency of collisions is 0.001671  ...
  - For #$7$: $B(0.8)$,	frequency of collisions is 0.00179267  ...
  - For #$8$: $B(0.9)$,	frequency of collisions is 0.00184067  ...
Saving to plots/MP__M6_T20000_N50__6_algos/main_FrequencyCollisions____env1-1_8920808627228473894.png ...
